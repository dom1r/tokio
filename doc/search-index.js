var N=null,E="",T="t",U="u",searchIndex={};
var R=["Creates a future which will open a file for reading and…","Queries the file system metadata for a path.","metadata","set_permissions","permissions","openoptions","create","tokio::fs","result","pending","An error returned when an operation could not be completed…","get_pin_mut","into_inner","with_capacity","get_ref","get_mut","Returns a reference to the internally buffered data.","Gets a reference to the underlying reader.","Gets a mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying reader.","Split a single value implementing `AsyncRead + AsyncWrite`…","tokio::io","Read bytes asynchronously.","context","Creates a future which will read all the bytes associated…","An extension trait which adds utility methods to…","read_to_string","Read all bytes until EOF in this source, placing them into…","shutdown","duration","option","tokio::net","poll_read_ready","poll_write_ready","TcpListener","An I/O object representing a TCP socket listening for…","TcpStream","An I/O object representing a TCP stream connected to a…","from_std","tcplistener","socketaddr","incoming","tokio::net::tcp","ReadHalf","WriteHalf","tosocketaddrs","tcpstream","local_addr","Gets the value of the `IP_TTL` option for this socket.","Sets the value for the `IP_TTL` option on this socket.","UdpSocket","An I/O object representing a UDP socket.","udpsocket","Returns a future that sends data on the socket to the…","set_ttl","ipv4addr","ipv6addr","tokio::net::udp","reuniteerror","recv_from","Returns a future that receives a single datagram on the…","Returns a future that receives a single datagram message…","Attempts to put the two \"halves\" of a `UdpSocket` back…","UnixDatagram","An I/O object representing a Unix datagram socket.","Incoming","UnixListener","A Unix socket which can accept connections from other Unix…","UnixStream","A structure representing a connected Unix socket.","unixdatagram","connect","send_to","Receives data from the socket.","Returns the local address that this socket is bound to.","peer_addr","unixlistener","take_error","Returns the value of the `SO_ERROR` option.","Consumes this listener, returning a stream of the sockets…","tokio::net::unix","unixstream","Creates an unnamed pair of connected sockets.","Shuts down the read, write, or both halves of this…","A future represents an asynchronous computation.","The type of value produced on completion.","Attempt to resolve the future to a final value,…","poll_flush","AsyncBufRead","poll_fill_buf","Attempt to return the contents of the internal buffer,…","Tells this buffer that `amt` bytes have been consumed from…","AsyncRead","prepare_uninitialized_buffer","Prepares an uninitialized buffer to be safe to pass to…","poll_read","tokio::prelude","Attempt to read from the `AsyncRead` into `buf`.","poll_read_buf","Pull some bytes from this source into the specified…","AsyncWrite","Writes bytes asynchronously.","poll_write","Attempt to write bytes from `buf` into the object.","Attempt to flush the object, ensuring that any buffered…","poll_shutdown","Initiates or attempts to shut down this writer, returning…","poll_write_buf","Write a `Buf` into this value, returning how many bytes…","command","Spawns a future on the default executor.","joinhandle","Spawn a future onto the Tokio runtime.","A stream of values produced asynchronously.","Values yielded by the stream.","poll_next","Attempt to pull out the next value of this stream,…","size_hint","Returns the bounds on the remaining length of the stream.","trysenderror","Receive the next value for this receiver.","Closes the receiving half of a channel, without dropping it.","unboundedtrysenderror","tokio::sync","RecvError","tokio::sync::oneshot","tryrecverror","semaphore","tryacquireerror","is_closed","Receiver","SendError","tokio::sync::watch","broadcast","senderror","joinerror","A queue of delayed elements.","DelayQueue","delayqueue","Sets the delay of the item associated with `key` to expire…","tokio::time","Returns `true` if the error was caused by the timer being…","instant","Returns the amount of time elapsed from another instant to…","throttle","Slow down a stream by enforcing a delay between items.","Allows a `Future` or `Stream` to execute for a limited…","timeout","borrow_mut","try_from","try_into","clone_into","type_id","tokio::io::split","tokio::net::driver","to_owned","tokio::net::util","try_poll_next","tokio::net::tcp::split","tokio::net::udp::split","to_string","tokio::net::unix::split","tokio::process","tokio::runtime","tokio::signal","tokio::signal::unix","tokio::sync::mpsc","tokio::sync::mpsc::error","try_poll","tokio::sync::oneshot::error","tokio::sync::semaphore","tokio::sync::watch::error","tokio::task","tokio::time::delay_queue","tokio::time::timeout","tokio::time::throttle","errorkind","formatter","ordering","partial_cmp","consume","park_timeout","default","signalkind","bufwriter","bufreader","add_assign","sub_assign","Consumes stream, returning the tokio I/O object.","as_raw_fd","poll_ready","start_send","poll_close","read_until","readuntil","read_line","Returns a stream of the contents of this reader split on…","Returns a stream over the lines of this reader. This…","Creates an adaptor which will chain this stream with…","Copy all data from `self` into the provided `AsyncWrite`.","Read data into the provided buffer.","read_exact","Read exactly the amount of data needed to fill the…","readexact","read_to_end","readtoend","readtostring","Creates an AsyncRead adapter which will read at most…","Write a buffer into this writter, returning how many bytes…","write_all","Attempt to write an entire buffer into this writter.","Flush the contents of this writer.","Shutdown this writer.","Get the inner value.","Creates a new `Duration` from the specified number of…","Returns the fractional part of this `Duration`, in whole…","checked_add","checked_sub","Returns the number of seconds contained by this `Duration`…","OpenOptions","FutureExt","ErrorKind","BufReader","BufStream","BufWriter","AsyncBufReadExt","AsyncReadExt","AsyncWriteExt","Registration","PollEvented","ReuniteError","UdpSocketRecvHalf","UdpSocketSendHalf","SignalKind","StreamExt","BarrierWaitResult","UnboundedReceiver","UnboundedSender","Semaphore","TryAcquireError","AtomicWaker","JoinError","DefaultGuard","ChildStdin","ChildStdout","ChildStderr","MutexGuard","TrySendError","UnboundedSendError","UnboundedTrySendError","UnboundedRecvError","TryRecvError","AcquireError","JoinHandle","Marks async function to be executed by selected runtime.","Marks async function to be executed by runtime, suitable…","Sequence a `read` operation.","Sequence a `write` operation.","tokio_test","tokio_test::io","tokio_test::task","deref_mut","tlsconnector","tlsacceptor","TlsStream","TlsConnector","TlsAcceptor","Provides a `Stream` and `Sink` interface for reading and…","framedparts","Returns a reference to the underlying I/O stream wrapped…","Returns a mutable reference to the underlying I/O stream…","read_buffer","Returns a reference to the read buffer.","Returns a reference to the underlying decoder.","Returns a mutable reference to the underlying decoder.","Creates a new length delimited codec builder with default…","builder","max_frame_length","lengthdelimitedcodec","framedread","framedwrite","tokio_util::codec","bytesmut","asyncread","asyncwrite","tokio_util","A unified `Stream` and `Sink` interface to an underlying…","tokio_util::codec::length_delimited","tokio_util::udp","linescodecerror","decode_eof","bytescodec","linescodec","A default method available to be called when there are no…","FramedParts","LinesCodecError","BytesCodec","FramedRead","FramedWrite","LengthDelimitedCodec","Builder","LinesCodec","UdpFramed","LengthDelimitedCodecError"];
searchIndex["test_cat"]={"doc":"A cat-like utility that can be used as a subprocess to…","i":[],"p":[]};
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[23,"main","tokio",R[254],N,N],[23,"test",E,R[255],N,N],[5,"spawn",E,R[110],N,[[[T]]]],[0,"blocking",E,"Perform blocking operations from an asynchronous context.",N,N],[5,"in_place","tokio::blocking","Run the provided blocking function without blocking the…",N,[[["f"]],["r"]]],[5,"spawn_blocking",E,"Run the provided closure on a thread where blocking is…",N,[[["f"]],[R[111]]]],[0,"fs","tokio","Asynchronous file and standard stream adaptation.",N,N],[3,"File",R[7],"A reference to an open file on the filesystem.",N,N],[3,R[219],E,"Options and flags which can be used to configure how a…",N,N],[3,"DirEntry",E,"Entries returned by the [`ReadDir`] stream.",N,N],[3,"ReadDir",E,"Stream of the entries in a directory.",N,N],[5,"create_dir",E,"Creates a new, empty directory at the provided path",N,[[]]],[5,"create_dir_all",E,"Recursively create a directory and all of its parent…",N,[[]]],[5,"hard_link",E,"Creates a new hard link on the filesystem.",N,[[]]],[5,R[2],E,R[1],N,[[]]],[5,"read",E,R[0],N,[[]]],[5,"read_dir",E,"Returns a stream over the entries within a directory.",N,[[]]],[5,"read_link",E,"Reads a symbolic link, returning the file that the link…",N,[[]]],[5,R[26],E,R[0],N,[[]]],[5,"remove_dir",E,"Removes an existing, empty directory.",N,[[]]],[5,"remove_dir_all",E,"Removes a directory at this path, after removing all its…",N,[[]]],[5,"remove_file",E,"Removes a file from the filesystem.",N,[[]]],[5,"rename",E,"Rename a file or directory to a new name, replacing the…",N,[[]]],[5,R[3],E,"Changes the permissions found on a file or a directory.",N,[[[R[4]]]]],[5,"symlink_metadata",E,R[1],N,[[]]],[5,"write",E,"Creates a future that will open a file for writing and…",N,[[["unpin"],["asref"]]]],[11,"open",E,"Attempts to open a file in read-only mode.",0,[[]]],[11,R[6],E,"Opens a file in write-only mode.",0,[[]]],[11,R[38],E,"Convert a [`std::fs::File`][std] to a…",0,[[["file"]],["file"]]],[11,"seek",E,"Seek to an offset, in bytes, in a stream.",0,[[["seekfrom"],["self"]]]],[11,"sync_all",E,"Attempts to sync all OS-internal metadata to disk.",0,[[["self"]]]],[11,"sync_data",E,"This function is similar to `sync_all`, except that it may…",0,[[["self"]]]],[11,"set_len",E,"Truncates or extends the underlying file, updating the…",0,[[["u64"],["self"]]]],[11,R[2],E,"Queries metadata about the underlying file.",0,[[["self"]]]],[11,"try_clone",E,"Create a new `File` instance that shares the same…",0,[[["self"]]]],[11,R[3],E,"Changes the permissions on the underlying file.",0,[[["self"],[R[4]]]]],[11,"new",E,"Creates a blank new set of options ready for configuration.",1,[[],[R[5]]]],[11,"read",E,"See the underlying [`read`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"write",E,"See the underlying [`write`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"append",E,"See the underlying [`append`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"truncate",E,"See the underlying [`truncate`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,R[6],E,"See the underlying [`create`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"create_new",E,"See the underlying [`create_new`] call for details.",1,[[["self"],["bool"]],[R[5]]]],[11,"open",E,"Opens a file at `path` with the options specified by `self`.",1,[[["self"]]]],[0,"os",E,"OS-specific functionality.",N,N],[0,"unix","tokio::fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",N,N],[5,"symlink","tokio::fs::os::unix","Creates a new symbolic link on the filesystem.",N,[[]]],[11,"path",R[7],"Returns the full path to the file that this entry…",2,[[["self"]],["pathbuf"]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",2,[[["self"]],["osstring"]]],[11,R[2],E,"Return the metadata for the file that this entry points at.",2,[[["self"]]]],[11,"file_type",E,"Return the file type for the file that this entry points at.",2,[[["self"]]]],[0,"future","tokio","Asynchronous values.",N,N],[5,"err","tokio::future","Create a future that is immediately ready with an error…",N,[[["e"]],[["ready",[R[8]]],[R[8]]]]],[5,"ok",E,"Create a future that is immediately ready with a success…",N,[[[T]],[["ready",[R[8]]],[R[8]]]]],[5,R[9],E,"Creates a future which never resolves, representing a…",N,[[],[R[9]]]],[5,"poll_fn",E,"Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"ready",E,"Create a future that is immediately ready with a value.",N,[[[T]],["ready"]]],[8,"Future",E,R[84],N,N],[16,"Output",E,R[85],3,N],[10,"poll",E,R[86],3,[[["pin"],["self"],[R[23]]],["poll"]]],[8,R[220],E,"An extension trait for `Future` that provides a variety of…",N,N],[11,R[147],E,"Creates a new future which allows `self` until `timeout`.",4,[[[R[29]]],[R[147]]]],[0,"io","tokio","Asynchronous I/O.",N,N],[3,"Error",R[21],"The error type for I/O operations of the [`Read`],…",N,N],[4,R[221],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",5,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",5,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",5,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",5,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remote…",5,N],[13,"NotConnected",E,"The network operation failed because it was not connected…",5,N],[13,"AddrInUse",E,"A socket address could not be bound because the address is…",5,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requested…",5,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",5,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",5,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blocking…",5,N],[13,"InvalidInput",E,"A parameter was incorrect.",5,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",5,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to be…",5,N],[13,"WriteZero",E,R[10],5,N],[13,"Interrupted",E,"This operation was interrupted.",5,N],[13,"Other",E,"Any I/O error not part of this list.",5,N],[13,"UnexpectedEof",E,R[10],5,N],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[3,R[222],E,"The `BufReader` struct adds buffering to any reader.",N,N],[3,R[223],E,"Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and…",N,N],[3,R[224],E,"Wraps a writer and buffers its output.",N,N],[3,"Copy",E,"A future that asynchronously copies the entire contents of…",N,N],[3,"Empty",E,"This struct is generally created by calling [`empty`].…",N,N],[3,"Repeat",E,"An async reader which yields one byte over and over and…",N,N],[3,"Sink",E,"An async writer which will move data into the void.",N,N],[3,"Take",E,"Stream for the `take` method.",N,N],[3,"Stderr",E,"A handle to the standard error stream of a process.",N,N],[3,"Stdin",E,"A handle to the standard input stream of a process.",N,N],[3,"Stdout",E,"A handle to the standard output stream of a process.",N,N],[5,"copy",E,"Asynchronously copies the entire contents of a reader into…",N,[[["r"],["w"]],[["copy"],["sized"]]]],[5,"empty",E,"Creates a new empty async reader.",N,[[],["empty"]]],[5,"repeat",E,"Creates an instance of an async reader that infinitely…",N,[[["u8"]],["repeat"]]],[5,"sink",E,"Creates an instance of an async writer which will…",N,[[],["sink"]]],[5,"stderr",E,"Constructs a new handle to the standard error of the…",N,[[],["stderr"]]],[5,"stdin",E,"Constructs a new handle to the standard input of the…",N,[[],["stdin"]]],[5,"stdout",E,"Constructs a new handle to the standard output of the…",N,[[],["stdout"]]],[11,"new",E,"Creates a new `BufReader` with a default buffer capacity.…",6,[[["r"]],["self"]]],[11,R[13],E,"Creates a new `BufReader` with the specified buffer…",6,[[["usize"],["r"]],["self"]]],[11,R[14],E,R[17],6,[[["self"]],["r"]]],[11,R[15],E,R[18],6,[[["self"]],["r"]]],[11,R[11],E,R[19],6,[[["pin"],["self"]],[["pin"],["r"]]]],[11,R[12],E,"Consumes this `BufWriter`, returning the underlying reader.",6,[[],["r"]]],[11,"buffer",E,R[16],6,[[["self"]]]],[11,"new",E,"Wrap a type in both [`BufWriter`] and [`BufReader`].",7,[[["rw"]],["bufstream"]]],[11,R[14],E,"Gets a reference to the underlying I/O object.",7,[[["self"]],["rw"]]],[11,R[15],E,"Gets a mutable reference to the underlying I/O object.",7,[[["self"]],["rw"]]],[11,R[11],E,"Gets a pinned mutable reference to the underlying I/O…",7,[[["pin"],["self"]],[["rw"],["pin"]]]],[11,R[12],E,"Consumes this `BufStream`, returning the underlying I/O…",7,[[],["rw"]]],[11,"new",E,"Creates a new `BufWriter` with a default buffer capacity.…",8,[[["w"]],["self"]]],[11,R[13],E,"Creates a new `BufWriter` with the specified buffer…",8,[[["w"],["usize"]],["self"]]],[11,R[14],E,"Gets a reference to the underlying writer.",8,[[["self"]],["w"]]],[11,R[15],E,"Gets a mutable reference to the underlying writer.",8,[[["self"]],["w"]]],[11,R[11],E,"Gets a pinned mutable reference to the underlying writer.",8,[[["pin"],["self"]],[["pin"],["w"]]]],[11,R[12],E,"Consumes this `BufWriter`, returning the underlying writer.",8,[[],["w"]]],[11,"buffer",E,R[16],8,[[["self"]]]],[11,"limit",E,"Returns the remaining number of bytes that can be read…",9,[[["self"]],["u64"]]],[11,"set_limit",E,"Sets the number of bytes that can be read before this…",9,[[["self"],["u64"]]]],[11,R[14],E,R[17],9,[[["self"]],["r"]]],[11,R[15],E,R[18],9,[[["self"]],["r"]]],[11,R[11],E,R[19],9,[[["pin"],["self"]],[["pin"],["r"]]]],[11,R[12],E,"Consumes the `Take`, returning the wrapped reader.",9,[[],["r"]]],[0,"split",E,R[20],N,N],[3,R[43],R[153],"The readable half of a value returned from `split`.",N,N],[3,R[44],E,"The writable half of a value returned from `split`.",N,N],[5,"split",E,R[20],N,[[[T]]]],[11,"unsplit",E,"Reunite with a previously split `WriteHalf`.",10,[[["writehalf"]],[T]]],[8,R[88],R[21],R[22],N,N],[10,R[89],E,R[90],11,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[10,R[180],E,R[91],11,[[["pin"],["self"],["usize"]]]],[8,R[92],E,R[22],N,N],[11,R[93],E,R[94],12,[[["self"]],["bool"]]],[10,R[95],E,R[97],12,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[98],E,R[99],12,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[8,R[100],E,R[101],N,N],[10,R[102],E,R[103],13,[[["self"],["pin"],[R[23]]],[[R[8],["usize","error"]],["poll",[R[8]]]]]],[10,R[87],E,R[104],13,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[10,R[105],E,R[106],13,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[107],E,R[108],13,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize","error"]],["poll",[R[8]]]]]],[8,R[225],E,R[25],N,N],[11,R[193],E,R[24],14,[[["vec"],["self"],["u8"]],[R[194]]]],[11,R[195],E,R[24],14,[[["self"],["string"]],["readline"]]],[11,"split",E,R[196],14,[[["u8"]],["split"]]],[11,"lines",E,R[197],14,[[],["lines"]]],[8,R[226],E,R[25],N,N],[11,"chain",E,R[198],15,[[["r"]],["chain"]]],[11,"copy",E,R[199],15,[[["self"],["w"]],[["copy"],["sized"]]]],[11,"read",E,R[200],15,[[["self"]],["read"]]],[11,R[201],E,R[202],15,[[["self"]],[R[203]]]],[11,R[204],E,R[27],15,[[["vec"],["self"]],[R[205]]]],[11,R[26],E,R[27],15,[[["self"],["string"]],[R[206]]]],[11,"take",E,R[207],15,[[["u64"]],["take"]]],[8,R[227],E,R[25],N,N],[11,"write",E,R[208],16,[[["self"]],["write"]]],[11,R[209],E,R[210],16,[[["self"]],["writeall"]]],[11,"flush",E,R[211],16,[[["self"]],["flush"]]],[11,R[28],E,R[212],16,[[["self"]],[R[28]]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,R[34],R[31],R[35],N,N],[3,R[36],E,R[37],N,N],[3,R[50],E,R[51],N,N],[3,R[63],E,R[64],N,N],[3,R[66],E,R[67],N,N],[3,R[68],E,R[69],N,N],[0,"driver",E,"Event loop that drives Tokio I/O resources.",N,N],[3,R[242],R[154],"Guard that resets current reactor on drop.",N,N],[3,"Handle",E,"A reference to a reactor.",N,N],[3,"Reactor",E,"The core reactor, or event loop.",N,N],[3,R[228],E,"Associates an I/O resource with the reactor instance that…",N,N],[5,"set_default",E,"Sets handle for a default reactor, returning guard that…",N,[[["handle"]],["defaultguard"]]],[11,"new",E,"Creates a new event loop, returning any error that…",17,[[],[[R[8],["reactor"]],["reactor"]]]],[11,"handle",E,"Returns a handle to this event loop which can be sent…",17,[[["self"]],["handle"]]],[11,"turn",E,"Performs one iteration of the event loop, blocking on…",17,[[["self"],[R[30],[R[29]]],[R[29]]],[["turn"],[R[8],["turn"]]]]],[11,"is_idle",E,"Returns true if the reactor is currently idle.",17,[[["self"]],["bool"]]],[11,"new",E,"Register the I/O resource with the default reactor.",18,[[[T]],[R[8]]]],[11,"deregister",E,"Deregister the I/O resource from the reactor it is…",18,[[["self"],[T]],[R[8]]]],[11,R[32],E,"Poll for events on the I/O resource's read readiness stream.",18,[[["self"],[R[23]]],[["poll",[R[8]]],[R[8],["ready"]]]]],[11,"take_read_ready",E,"Consume any pending read readiness event.",18,[[["self"]],[[R[30],["ready"]],[R[8],[R[30]]]]]],[11,R[33],E,"Poll for events on the I/O resource's write readiness…",18,[[["self"],[R[23]]],[["poll",[R[8]]],[R[8],["ready"]]]]],[11,"take_write_ready",E,"Consume any pending write readiness event.",18,[[["self"]],[[R[30],["ready"]],[R[8],[R[30]]]]]],[0,"util",R[31],"Utilities for implementing networking types.",N,N],[3,R[229],R[156],"Associates an I/O resource that implements the…",N,N],[11,"new",E,"Creates a new `PollEvented` associated with the default…",19,[[["e"]],[R[8]]]],[11,R[14],E,"Returns a shared reference to the underlying I/O object…",19,[[["self"]],["e"]]],[11,R[15],E,"Returns a mutable reference to the underlying I/O object…",19,[[["self"]],["e"]]],[11,R[12],E,"Consumes self, returning the inner I/O object",19,[[],[R[8]]]],[11,R[32],E,"Check the I/O resource's read readiness state.",19,[[["self"],["ready"],[R[23]]],[["poll",[R[8]]],[R[8],["ready"]]]]],[11,"clear_read_ready",E,"Clears the I/O resource's read readiness state and…",19,[[["self"],["ready"],[R[23]]],[R[8]]]],[11,R[33],E,"Check the I/O resource's write readiness state.",19,[[["self"],[R[23]]],[["poll",[R[8]]],[R[8],["ready"]]]]],[11,"clear_write_ready",E,"Resets the I/O resource's write readiness state and…",19,[[["self"],[R[23]]],[R[8]]]],[0,"tcp",R[31],"TCP bindings for `tokio`.",N,N],[3,R[65],R[42],"Stream returned by the `TcpListener::incoming` function…",N,N],[3,R[34],E,R[35],N,N],[3,R[36],E,R[37],N,N],[11,"bind",R[31],"Creates a new TcpListener which will be bound to the…",20,[[[R[45]]]]],[11,"accept",E,"Accept a new incoming connection from this listener.",20,[[["self"]]]],[11,R[38],E,"Create a new TCP listener from the standard library's TCP…",20,[[[R[39]]],[[R[39]],[R[8],[R[39]]]]]],[11,R[47],E,"Returns the local address that this listener is bound to.",20,[[["self"]],[[R[8],[R[40]]],[R[40]]]]],[11,R[41],E,R[79],20,[[],[R[41]]]],[11,"ttl",E,R[48],20,[[["self"]],[[R[8],["u32"]],["u32"]]]],[11,R[54],E,R[49],20,[[["self"],["u32"]],[R[8]]]],[0,"split",R[42],"`TcpStream` split support.",N,N],[3,R[43],R[158],"Read half of a `TcpStream`.",N,N],[3,R[44],E,"Write half of a `TcpStream`.",N,N],[11,R[71],R[31],"Opens a TCP connection to a remote host.",21,[[[R[45]]]]],[11,R[38],E,"Create a new `TcpStream` from a `std::net::TcpStream`.",21,[[[R[46]]],[[R[8],[R[46]]],[R[46]]]]],[11,R[47],E,"Returns the local address that this stream is bound to.",21,[[["self"]],[[R[8],[R[40]]],[R[40]]]]],[11,R[75],E,"Returns the remote address that this stream is connected…",21,[[["self"]],[[R[8],[R[40]]],[R[40]]]]],[11,"peek",E,"Receives data on the socket from the remote address to…",21,[[["self"]]]],[11,R[28],E,R[83],21,[[["self"],[R[28]]],[R[8]]]],[11,"nodelay",E,"Gets the value of the `TCP_NODELAY` option on this socket.",21,[[["self"]],[["bool"],[R[8],["bool"]]]]],[11,"set_nodelay",E,"Sets the value of the `TCP_NODELAY` option on this socket.",21,[[["self"],["bool"]],[R[8]]]],[11,"recv_buffer_size",E,"Gets the value of the `SO_RCVBUF` option on this socket.",21,[[["self"]],[[R[8],["usize"]],["usize"]]]],[11,"set_recv_buffer_size",E,"Sets the value of the `SO_RCVBUF` option on this socket.",21,[[["self"],["usize"]],[R[8]]]],[11,"send_buffer_size",E,"Gets the value of the `SO_SNDBUF` option on this socket.",21,[[["self"]],[[R[8],["usize"]],["usize"]]]],[11,"set_send_buffer_size",E,"Sets the value of the `SO_SNDBUF` option on this socket.",21,[[["self"],["usize"]],[R[8]]]],[11,"keepalive",E,"Returns whether keepalive messages are enabled on this…",21,[[["self"]],[[R[30],[R[29]]],[R[8],[R[30]]]]]],[11,"set_keepalive",E,"Sets whether keepalive messages are enabled to be sent on…",21,[[["self"],[R[30],[R[29]]],[R[29]]],[R[8]]]],[11,"ttl",E,R[48],21,[[["self"]],[[R[8],["u32"]],["u32"]]]],[11,R[54],E,R[49],21,[[["self"],["u32"]],[R[8]]]],[11,"linger",E,"Reads the linger duration for this socket by getting the…",21,[[["self"]],[[R[30],[R[29]]],[R[8],[R[30]]]]]],[11,"set_linger",E,"Sets the linger duration of this socket by setting the…",21,[[["self"],[R[30],[R[29]]],[R[29]]],[R[8]]]],[11,"split",E,"Split a `TcpStream` into a read half and a write half,…",21,[[["self"]]]],[0,"udp",E,"UDP bindings for `tokio`.",N,N],[3,R[50],R[57],R[51],N,N],[11,"bind",R[31],"This function will create a new UDP socket and attempt to…",22,[[[R[45]]]]],[11,R[38],E,"Creates a new `UdpSocket` from the previously bound socket…",22,[[[R[52]]],[[R[8],[R[52]]],[R[52]]]]],[11,"split",E,"Split the `UdpSocket` into a receive half and a send half.…",22,[[]]],[11,R[47],E,R[74],22,[[["self"]],[[R[8],[R[40]]],[R[40]]]]],[11,R[71],E,"Connects the UDP socket setting the default destination…",22,[[["self"],[R[45]]]]],[11,"send",E,R[53],22,[[["self"]]]],[11,"recv",E,R[61],22,[[["self"]]]],[11,R[72],E,R[53],22,[[[R[45]],["self"]]]],[11,R[59],E,R[60],22,[[["self"]]]],[11,R[133],E,"Gets the value of the `SO_BROADCAST` option for this socket.",22,[[["self"]],[["bool"],[R[8],["bool"]]]]],[11,"set_broadcast",E,"Sets the value of the `SO_BROADCAST` option for this socket.",22,[[["self"],["bool"]],[R[8]]]],[11,"multicast_loop_v4",E,"Gets the value of the `IP_MULTICAST_LOOP` option for this…",22,[[["self"]],[["bool"],[R[8],["bool"]]]]],[11,"set_multicast_loop_v4",E,"Sets the value of the `IP_MULTICAST_LOOP` option for this…",22,[[["self"],["bool"]],[R[8]]]],[11,"multicast_ttl_v4",E,"Gets the value of the `IP_MULTICAST_TTL` option for this…",22,[[["self"]],[[R[8],["u32"]],["u32"]]]],[11,"set_multicast_ttl_v4",E,"Sets the value of the `IP_MULTICAST_TTL` option for this…",22,[[["self"],["u32"]],[R[8]]]],[11,"multicast_loop_v6",E,"Gets the value of the `IPV6_MULTICAST_LOOP` option for…",22,[[["self"]],[["bool"],[R[8],["bool"]]]]],[11,"set_multicast_loop_v6",E,"Sets the value of the `IPV6_MULTICAST_LOOP` option for…",22,[[["self"],["bool"]],[R[8]]]],[11,"ttl",E,R[48],22,[[["self"]],[[R[8],["u32"]],["u32"]]]],[11,R[54],E,R[49],22,[[["self"],["u32"]],[R[8]]]],[11,"join_multicast_v4",E,"Executes an operation of the `IP_ADD_MEMBERSHIP` type.",22,[[["self"],[R[55]]],[R[8]]]],[11,"join_multicast_v6",E,"Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",22,[[["self"],["u32"],[R[56]]],[R[8]]]],[11,"leave_multicast_v4",E,"Executes an operation of the `IP_DROP_MEMBERSHIP` type.",22,[[["self"],[R[55]]],[R[8]]]],[11,"leave_multicast_v6",E,"Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",22,[[["self"],["u32"],[R[56]]],[R[8]]]],[0,"split",R[57],"`UdpSocket` split support.",N,N],[3,R[232],R[159],"The send half after `split`.",N,N],[3,R[231],E,"The recv half after `split`.",N,N],[3,R[230],E,"Error indicating two halves were not from the same socket,…",N,N],[12,"0",E,E,23,N],[12,"1",E,E,23,N],[11,"reunite",E,R[62],24,[[["udpsocketsendhalf"]],[[R[8],[R[52],R[58]]],[R[52]],[R[58]]]]],[11,R[59],E,R[60],24,[[["self"]]]],[11,"recv",E,R[61],24,[[["self"]]]],[11,"reunite",E,R[62],25,[[["udpsocketrecvhalf"]],[[R[8],[R[52],R[58]]],[R[52]],[R[58]]]]],[11,R[72],E,R[53],25,[[[R[40]],["self"]]]],[11,"send",E,R[53],25,[[["self"]]]],[0,"unix",R[31],"Unix Domain Sockets for Tokio.",N,N],[3,R[63],R[80],R[64],N,N],[3,R[65],E,"Stream of listeners",N,N],[3,R[66],E,R[67],N,N],[3,R[68],E,R[69],N,N],[3,"UCred",E,"Credentials of a process",N,N],[12,"uid",E,"UID (user ID) of the process",26,N],[12,"gid",E,"GID (group ID) of the process",26,N],[11,"bind",R[31],"Creates a new `UnixDatagram` bound to the specified path.",27,[[["p"]],[[R[70]],[R[8],[R[70]]]]]],[11,"pair",E,R[82],27,[[],[R[8]]]],[11,R[38],E,"Consumes a `UnixDatagram` in the standard library and…",27,[[[R[70]]],[[R[70]],[R[8],[R[70]]]]]],[11,"unbound",E,"Creates a new `UnixDatagram` which is not bound to any…",27,[[],[[R[70]],[R[8],[R[70]]]]]],[11,R[71],E,"Connects the socket to the specified address.",27,[[["self"],["asref",["path"]],["path"]],[R[8]]]],[11,"send",E,"Sends data on the socket to the socket's peer.",27,[[["self"]]]],[11,"recv",E,R[73],27,[[["self"]]]],[11,R[72],E,"Sends data on the socket to the specified address.",27,[[["p"],["self"]]]],[11,R[59],E,R[73],27,[[["self"]]]],[11,R[47],E,R[74],27,[[["self"]],[[R[40]],[R[8],[R[40]]]]]],[11,R[75],E,"Returns the address of this socket's peer.",27,[[["self"]],[[R[40]],[R[8],[R[40]]]]]],[11,R[77],E,R[78],27,[[["self"]],[[R[30],["error"]],[R[8],[R[30]]]]]],[11,R[28],E,"Shut down the read, write, or both halves of this…",27,[[["self"],[R[28]]],[R[8]]]],[11,"bind",E,"Creates a new `UnixListener` bound to the specified path.",28,[[["p"]],[[R[8],[R[76]]],[R[76]]]]],[11,R[38],E,"Consumes a `UnixListener` in the standard library and…",28,[[[R[76]]],[[R[8],[R[76]]],[R[76]]]]],[11,R[47],E,"Returns the local socket address of this listener.",28,[[["self"]],[[R[40]],[R[8],[R[40]]]]]],[11,R[77],E,R[78],28,[[["self"]],[[R[30],["error"]],[R[8],[R[30]]]]]],[11,"accept",E,"Accepts a new incoming connection to this listener.",28,[[["self"]]]],[11,R[41],E,R[79],28,[[],[R[41]]]],[0,"split",R[80],"`UnixStream` split support.",N,N],[3,R[43],R[161],"Read half of a `UnixStream`.",N,N],[3,R[44],E,"Write half of a `UnixStream`.",N,N],[11,R[71],R[31],"Connects to the socket named by `path`.",29,[[["p"]]]],[11,R[38],E,"Consumes a `UnixStream` in the standard library and…",29,[[[R[81]]],[[R[8],[R[81]]],[R[81]]]]],[11,"pair",E,R[82],29,[[],[R[8]]]],[11,R[47],E,"Returns the socket address of the local half of this…",29,[[["self"]],[[R[40]],[R[8],[R[40]]]]]],[11,R[75],E,"Returns the socket address of the remote half of this…",29,[[["self"]],[[R[40]],[R[8],[R[40]]]]]],[11,"peer_cred",E,"Returns effective credentials of the process which called…",29,[[["self"]],[[R[8],["ucred"]],["ucred"]]]],[11,R[77],E,R[78],29,[[["self"]],[[R[30],["error"]],[R[8],[R[30]]]]]],[11,R[28],E,R[83],29,[[["self"],[R[28]]],[R[8]]]],[11,"split",E,"Split a `UnixStream` into a read half and a write half,…",29,[[["self"]]]],[8,"ToSocketAddrs",E,"Convert or resolve without blocking to one or more…",N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[8,"Future",R[96],R[84],N,N],[16,"Output",E,R[85],3,N],[10,"poll",E,R[86],3,[[["pin"],["self"],[R[23]]],["poll"]]],[8,"Stream",E,R[113],N,N],[16,"Item",E,R[114],30,N],[10,R[115],E,R[116],30,[[["pin"],["self"],[R[23]]],[[R[30]],["poll",[R[30]]]]]],[11,R[117],E,R[118],30,[[["self"]]]],[8,"Sink",E,"A `Sink` is a value into which other values can be sent,…",N,N],[16,"Error",E,"The type of value produced by the sink when an error occurs.",31,N],[10,R[190],E,"Attempts to prepare the `Sink` to receive a value.",31,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[10,R[191],E,"Begin the process of sending a value to the sink. Each…",31,[[["pin"],["self"],["item"]],[R[8]]]],[10,R[87],E,"Flush any remaining output from this sink.",31,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[10,R[192],E,"Flush any remaining output and close this sink, if…",31,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[8,R[88],E,R[22],N,N],[10,R[89],E,R[90],11,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[10,R[180],E,R[91],11,[[["pin"],["self"],["usize"]]]],[8,R[92],E,R[22],N,N],[11,R[93],R[21],R[94],12,[[["self"]],["bool"]]],[10,R[95],R[96],R[97],12,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[98],R[21],R[99],12,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[8,R[100],R[96],R[101],N,N],[10,R[102],E,R[103],13,[[["self"],["pin"],[R[23]]],[[R[8],["usize","error"]],["poll",[R[8]]]]]],[10,R[87],E,R[104],13,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[10,R[105],E,R[106],13,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[107],R[21],R[108],13,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize","error"]],["poll",[R[8]]]]]],[0,"process","tokio","An implementation of asynchronous process management for…",N,N],[3,"Command",R[162],"This structure mimics the API of [`std::process::Command`]…",N,N],[3,"Child",E,"Representation of a child process spawned onto an event…",N,N],[3,R[243],E,"The standard input stream for spawned children.",N,N],[3,R[244],E,"The standard output stream for spawned children.",N,N],[3,R[245],E,"The standard error stream for spawned children.",N,N],[11,"new",E,"Constructs a new `Command` for launching the program at…",32,[[["asref",["osstr"]],["osstr"]],[R[109]]]],[11,"arg",E,"Adds an argument to pass to the program.",32,[[["self"],["asref",["osstr"]],["osstr"]],[R[109]]]],[11,"args",E,"Adds multiple arguments to pass to the program.",32,[[["self"],["i"]],[R[109]]]],[11,"env",E,"Inserts or updates an environment variable mapping.",32,[[["self"],["k"],["v"]],[R[109]]]],[11,"envs",E,"Adds or updates multiple environment variable mappings.",32,[[["self"],["i"]],[R[109]]]],[11,"env_remove",E,"Removes an environment variable mapping.",32,[[["self"],["asref",["osstr"]],["osstr"]],[R[109]]]],[11,"env_clear",E,"Clears the entire environment map for the child process.",32,[[["self"]],[R[109]]]],[11,"current_dir",E,"Sets the working directory for the child process.",32,[[["self"],["asref",["path"]],["path"]],[R[109]]]],[11,"stdin",E,"Configuration for the child process's standard input…",32,[[["self"],["into",["stdio"]],["stdio"]],[R[109]]]],[11,"stdout",E,"Configuration for the child process's standard output…",32,[[["self"],["into",["stdio"]],["stdio"]],[R[109]]]],[11,"stderr",E,"Configuration for the child process's standard error…",32,[[["self"],["into",["stdio"]],["stdio"]],[R[109]]]],[11,"uid",E,"Sets the child process's user ID. This translates to a…",32,[[["self"],["u32"]],[R[109]]]],[11,"gid",E,"Similar to `uid`, but sets the group ID of the child…",32,[[["self"],["u32"]],[R[109]]]],[11,"pre_exec",E,"Schedules a closure to be run just before the `exec`…",32,[[["self"],["f"]],[R[109]]]],[11,"spawn",E,"Executes the command as a child process, returning a…",32,[[["self"]],[[R[8],["child"]],["child"]]]],[11,"status",E,"Executes a command as a child process, waiting for it to…",32,[[["self"]]]],[11,"output",E,"Executes the command as a child process, waiting for it to…",32,[[["self"]]]],[11,"id",E,"Returns the OS-assigned process identifier associated with…",33,[[["self"]],["u32"]]],[11,"kill",E,"Forces the child to exit.",33,[[["self"]],[R[8]]]],[11,"stdin",E,"Returns a handle for writing to the child's stdin, if it…",33,[[["self"]],[R[30]]]],[11,"stdout",E,"Returns a handle for reading from the child's stdout, if…",33,[[["self"]],[R[30]]]],[11,"stderr",E,"Returns a handle for reading from the child's stderr, if…",33,[[["self"]],[R[30]]]],[11,"wait_with_output",E,"Returns a future that will resolve to an `Output`,…",33,[[]]],[11,"forget",E,"Drop this `Child` without killing the underlying process.",33,[[]]],[0,"runtime","tokio","A batteries included runtime for applications using Tokio.",N,N],[3,R[300],R[163],"Builds Tokio Runtime with custom configuration values.",N,N],[3,"Handle",E,"Handle to the runtime",N,N],[3,"Runtime",E,"The Tokio runtime, includes a reactor as well as an…",N,N],[5,"spawn",E,R[110],N,[[[T]]]],[11,"new",E,"Returns a new runtime builder initialized with default…",34,[[],[R[276]]]],[11,"num_threads",E,"Set the maximum number of worker threads for the…",34,[[["self"],["usize"]],["self"]]],[11,"current_thread",E,"Use only the current thread for executing tasks.",34,[[["self"]],["self"]]],[11,"thread_pool",E,"Use a thread-pool for executing tasks.",34,[[["self"]],["self"]]],[11,"thread_name",E,"Set name of threads spawned by the `Runtime`'s thread pool.",34,[[["self"]],["self"]]],[11,"thread_stack_size",E,"Set the stack size (in bytes) for worker threads.",34,[[["self"],["usize"]],["self"]]],[11,"after_start",E,"Execute function `f` after each thread is started but…",34,[[["self"],["f"]],["self"]]],[11,"before_stop",E,"Execute function `f` before each thread stops.",34,[[["self"],["f"]],["self"]]],[11,"build",E,"Create the configured `Runtime`.",34,[[["self"]],[[R[8],["runtime"]],["runtime"]]]],[11,"spawn",E,R[112],35,[[["self"],["f"]],[R[111]]]],[11,"enter",E,"Enter the runtime context",35,[[["self"],["f"]],["r"]]],[8,"Park",E,"Block the current thread.",N,N],[16,"Unpark",E,"Unpark handle type for the `Park` implementation.",36,N],[16,"Error",E,"Error returned by `park`",36,N],[10,"unpark",E,"Get a new `Unpark` handle associated with this `Park`…",36,[[["self"]]]],[10,"park",E,"Block the current thread unless or until the token is…",36,[[["self"]],[R[8]]]],[10,R[181],E,"Park the current thread for at most `duration`.",36,[[["self"],[R[29]]],[R[8]]]],[8,"Unpark",E,"Unblock a thread blocked by the associated [`Park`]…",N,N],[10,"unpark",E,"Unblock a thread that is blocked by the associated `Park`…",37,[[["self"]]]],[11,"new",E,"Create a new runtime instance with default configuration…",38,[[],[R[8]]]],[11,"spawn",E,R[112],38,[[["self"],["f"]],[R[111]]]],[11,"block_on",E,"Run a future to completion on the Tokio runtime. This is…",38,[[["self"],["future"]]]],[11,"handle",E,"Return a handle to the runtime's spawner.",38,[[["self"]],["handle"]]],[0,"signal","tokio","Asynchronous signal handling for Tokio",N,N],[3,"CtrlC",R[164],"Represents a stream which receives \"ctrl-c\" notifications…",N,N],[5,"ctrl_c",E,"Creates a new stream which receives \"ctrl-c\" notifications…",N,[[],[["ctrlc"],[R[8],["ctrlc"]]]]],[0,"unix",E,"Unix-specific types for signal handling.",N,N],[3,R[233],R[165],"Represents the specific kind of signal to listen for.",N,N],[3,"Signal",E,"An implementation of `Stream` for receiving a particular…",N,N],[5,"signal",E,"Creates a new stream which will receive notifications when…",N,[[[R[183]]],[[R[8],["signal"]],["signal"]]]],[11,"from_raw",E,"Allows for listening to any valid OS signal.",39,[[["c_int"]],["self"]]],[11,"alarm",E,"Represents the SIGALRM signal.",39,[[],["self"]]],[11,"child",E,"Represents the SIGCHLD signal.",39,[[],["self"]]],[11,"hangup",E,"Represents the SIGHUP signal.",39,[[],["self"]]],[11,"interrupt",E,"Represents the SIGINT signal.",39,[[],["self"]]],[11,"io",E,"Represents the SIGIO signal.",39,[[],["self"]]],[11,"pipe",E,"Represents the SIGPIPE signal.",39,[[],["self"]]],[11,"quit",E,"Represents the SIGQUIT signal.",39,[[],["self"]]],[11,"terminate",E,"Represents the SIGTERM signal.",39,[[],["self"]]],[11,"user_defined1",E,"Represents the SIGUSR1 signal.",39,[[],["self"]]],[11,"user_defined2",E,"Represents the SIGUSR2 signal.",39,[[],["self"]]],[11,"window_change",E,"Represents the SIGWINCH signal.",39,[[],["self"]]],[0,"stream","tokio","A sequence of asynchronous values.",N,N],[8,"Stream","tokio::stream",R[113],N,N],[16,"Item",E,R[114],30,N],[10,R[115],E,R[116],30,[[["pin"],["self"],[R[23]]],[[R[30]],["poll",[R[30]]]]]],[11,R[117],E,R[118],30,[[["self"]]]],[5,"empty",E,"Creates a stream which contains no elements.",N,[[],["empty"]]],[5,"iter",E,"Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iter"]]],[5,"once",E,"Creates a stream of a single element.",N,[[["fut"]],["once"]]],[5,R[9],E,"Creates a stream which never returns any elements.",N,[[],[R[9]]]],[5,"poll_fn",E,"Creates a new stream wrapping a function returning…",N,[[["f"]],["pollfn"]]],[5,"repeat",E,"Create a stream which produces the same item repeatedly.",N,[[[T]],["repeat"]]],[5,"unfold",E,"Creates a `Stream` from a seed and a closure returning a…",N,[[[T],["f"]],["unfold"]]],[8,R[234],E,"An extension trait for `Stream` that provides a variety of…",N,N],[11,R[144],E,"Throttle down the stream by enforcing a fixed delay…",40,[[[R[29]]],[R[144]]]],[11,R[147],E,"Creates a new stream which allows `self` until `timeout`.",40,[[[R[29]]],[R[147]]]],[0,"sync","tokio","Future-aware synchronization",N,N],[3,"Barrier",R[123],"A barrier enables multiple threads to synchronize the…",N,N],[3,R[235],E,"A `BarrierWaitResult` is returned by `wait` when all…",N,N],[3,"Mutex",E,"An asynchronous mutual exclusion primitive useful for…",N,N],[3,R[246],E,"A handle to a held `Mutex`.",N,N],[3,R[240],E,"A synchronization primitive for task waking.",N,N],[11,"new",E,"Creates a new barrier that can block a given number of…",41,[[["usize"]],["barrier"]]],[11,"wait",E,"Does not resolve until all tasks have rendezvoused here.",41,[[["self"]]]],[11,"is_leader",E,"Returns true if this thread from wait is the \"leader…",42,[[["self"]],["bool"]]],[0,"mpsc",E,"A multi-producer, single-consumer queue for sending values…",N,N],[3,R[130],R[166],"Receive values from the associated `Sender`.",N,N],[3,"Sender",E,"Send values to the associated `Receiver`.",N,N],[3,R[236],E,"Receive values from the associated `UnboundedSender`.",N,N],[3,R[237],E,"Send values to the associated `UnboundedReceiver`.",N,N],[5,"channel",E,"Create a bounded mpsc channel for communicating between…",N,[[["usize"]]]],[5,"unbounded_channel",E,"Create an unbounded mpsc channel for communicating between…",N,[[]]],[11,"recv",E,R[120],43,[[["self"]]]],[11,"close",E,R[121],43,[[["self"]]]],[11,"try_send",E,"Attempts to send a message on this `Sender`, returning the…",44,[[["self"],[T]],[[R[119]],[R[8],[R[119]]]]]],[11,"send",E,"Send a value, waiting until there is capacity.",44,[[[T],["self"]]]],[11,"recv",E,R[120],45,[[["self"]]]],[11,"close",E,R[121],45,[[["self"]]]],[11,"try_send",E,"Attempts to send a message on this `UnboundedSender`…",46,[[["self"],[T]],[[R[8],[R[122]]],[R[122]]]]],[0,"error",E,"Channel error types",N,N],[3,R[124],R[167],"Error returned by `Receiver`.",N,N],[3,R[131],E,"Error returned by the `Sender`.",N,N],[3,R[247],E,"Error returned by `Sender::try_send`.",N,N],[3,R[250],E,"Error returned by `UnboundedReceiver`.",N,N],[3,R[248],E,"Error returned by the `UnboundedSender`.",N,N],[3,R[249],E,"Returned by `UnboundedSender::try_send` when the channel…",N,N],[11,"new",R[123],"Creates a new lock in an unlocked state ready for use.",47,[[[T]],["self"]]],[11,"lock",E,"A future that resolves on acquiring the lock and returns…",47,[[["self"]]]],[0,"oneshot",E,"A channel for sending a single message between…",N,N],[3,"Sender",R[125],"Sends a value to the associated `Receiver`.",N,N],[3,R[130],E,"Receive a value from the associated `Sender`.",N,N],[5,"channel",E,"Create a new one-shot channel for sending single values…",N,[[]]],[0,"error",E,"Oneshot error types",N,N],[3,R[124],R[169],"Error returned by the `Future` implementation for…",N,N],[3,R[251],E,"Error returned by the `try_recv` function on `Receiver`.",N,N],[11,"send",R[125],"Completes this oneshot with a successful result.",48,[[[T]],[R[8]]]],[11,"closed",E,"Wait for the associated [`Receiver`] handle to drop.",48,[[["self"]]]],[11,R[129],E,"Check if the associated [`Receiver`] handle has been…",48,[[["self"]],["bool"]]],[11,"close",E,"Prevent the associated [`Sender`] handle from sending a…",49,[[["self"]]]],[11,"try_recv",E,"Attempts to receive a value outside of the context of a…",49,[[["self"]],[[R[8],[R[126]]],[R[126]]]]],[0,R[127],R[123],"Thread-safe, asynchronous counting semaphore.",N,N],[3,R[238],R[170],"Futures-aware semaphore.",N,N],[3,"Permit",E,"A semaphore permit",N,N],[3,R[252],E,"Error returned by `Permit::poll_acquire`.",N,N],[3,R[239],E,"Error returned by `Permit::try_acquire`.",N,N],[11,"new",E,"Creates a new semaphore with the initial number of permits",50,[[["usize"]],[R[127]]]],[11,"available_permits",E,"Returns the current number of available permits",50,[[["self"]],["usize"]]],[11,"close",E,"Close the semaphore. This prevents the semaphore from…",50,[[["self"]]]],[11,"add_permits",E,"Add `n` new permits to the semaphore.",50,[[["self"],["usize"]]]],[11,"new",E,"Create a new `Permit`.",51,[[],["permit"]]],[11,"is_acquired",E,"Returns true if the permit has been acquired",51,[[["self"]],["bool"]]],[11,"poll_acquire",E,"Try to acquire the permit. If no permits are available,…",51,[[["self"],[R[127]],[R[23]]],[["poll",[R[8]]],[R[8],["acquireerror"]]]]],[11,"try_acquire",E,"Try to acquire the permit.",51,[[["self"],[R[127]]],[[R[8],[R[128]]],[R[128]]]]],[11,"release",E,"Release a permit back to the semaphore",51,[[["self"],[R[127]]]]],[11,"forget",E,"Forget the permit without releasing it back to the…",51,[[["self"]]]],[11,R[129],E,"Returns true if the error was caused by a closed semaphore.",52,[[["self"]],["bool"]]],[11,"is_no_permits",E,"Returns true if the error was caused by calling…",52,[[["self"]],["bool"]]],[11,"new",R[123],"Create an `AtomicWaker`",53,[[],["atomicwaker"]]],[11,"register",E,"Registers the current waker to be notified on calls to…",53,[[["self"],["waker"]]]],[11,"register_by_ref",E,"Registers the provided waker to be notified on calls to…",53,[[["self"],["waker"]]]],[11,"wake",E,"Wakes the task that last called `register`.",53,[[["self"]]]],[11,"take_waker",E,"Attempts to take the `Waker` value out of the…",53,[[["self"]],[["waker"],[R[30],["waker"]]]]],[0,"watch",E,"A single-producer, multi-consumer channel that only…",N,N],[3,R[130],R[132],"Receives values from the associated `Sender`.",N,N],[3,"Sender",E,"Sends values to the associated `Receiver`.",N,N],[3,"Ref",E,"Returns a reference to the inner value",N,N],[5,"channel",E,"Create a new watch channel, returning the \"send\" and…",N,[[[T]]]],[0,"error",E,"Watch error types",N,N],[3,R[131],R[171],"Error produced when sending a value fails.",N,N],[11,R[14],R[132],"Returns a reference to the most recently sent value",54,[[["self"]],["ref"]]],[11,"recv_ref",E,"Attempts to receive the latest value sent via the channel.",54,[[["self"]]]],[11,"recv",E,"Attempts to clone the latest value sent via the channel.",54,[[["self"]]]],[11,R[133],E,"Broadcast a new value via the channel, notifying all…",55,[[["self"],[T]],[[R[8],[R[134]]],[R[134]]]]],[11,"closed",E,"Completes when all receivers have dropped.",55,[[["self"]]]],[0,"task","tokio","Asynchronous green-threads.",N,N],[3,R[241],R[172],"Task failed to execute to completion.",N,N],[3,R[253],E,"An owned permission to join on a task (await its…",N,N],[5,"yield_now",E,"Yield execution back to the Tokio runtime.",N,[[]]],[11,"cancelled",E,"Create a new `cancelled` error",56,[[],[R[135]]]],[11,"panic",E,"Create a new `panic` error",56,[[["any"],["box",["any"]]],[R[135]]]],[0,"time","tokio","Utilities for tracking time.",N,N],[3,"Duration",R[140],"A `Duration` type to represent a span of time, typically…",N,N],[3,R[137],E,R[136],N,N],[3,"Delay",E,"A future that completes at a specified instant in time.",N,N],[3,"Error",E,"Errors encountered by the timer implementation.",N,N],[3,"Instant",E,"A measurement of the system clock, useful for talking to…",N,N],[3,"Interval",E,"A stream representing notifications at fixed interval",N,N],[3,"Timeout",E,R[146],N,N],[5,"advance",E,"Advance time",N,[[[R[29]]]]],[5,"pause",E,"Pause time",N,[[]]],[5,"resume",E,"Resume time",N,[[]]],[5,"delay",E,"Create a Future that completes at `deadline`.",N,[[[R[142]]],["delay"]]],[5,"delay_for",E,"Create a Future that completes in `duration` from now.",N,[[[R[29]]],["delay"]]],[0,"delay_queue",E,R[136],N,N],[3,R[137],R[173],R[136],N,N],[3,"Expired",E,"An entry in `DelayQueue` that has expired and removed.",N,N],[3,"Key",E,"Token to a value stored in a `DelayQueue`.",N,N],[11,"new",E,"Create a new, empty, `DelayQueue`",57,[[],[R[138]]]],[11,R[13],E,"Create a new, empty, `DelayQueue` with the specified…",57,[[["usize"]],[R[138]]]],[11,"insert_at",E,"Insert `value` into the queue set to expire at a specific…",57,[[["self"],[T],[R[142]]],["key"]]],[11,R[115],E,"Attempt to pull out the next value of the delay queue,…",57,[[["self"],[R[23]]],[["poll",[R[30]]],[R[30],[R[8]]]]]],[11,"insert",E,"Insert `value` into the queue set to expire after the…",57,[[["self"],[T],[R[29]]],["key"]]],[11,"remove",E,"Remove the item associated with `key` from the queue.",57,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[139],57,[[["self"],["key"],[R[142]]]]],[11,"reset",E,R[139],57,[[["self"],["key"],[R[29]]]]],[11,"clear",E,"Clears the queue, removing all items.",57,[[["self"]]]],[11,"capacity",E,"Returns the number of elements the queue can hold without…",57,[[["self"]],["usize"]]],[11,"reserve",E,"Reserve capacity for at least `additional` more items to…",57,[[["self"],["usize"]]]],[11,"is_empty",E,"Returns `true` if there are no items in the queue.",57,[[["self"]],["bool"]]],[11,R[14],E,"Returns a reference to the inner value.",58,[[["self"]],[T]]],[11,R[15],E,"Returns a mutable reference to the inner value.",58,[[["self"]],[T]]],[11,R[12],E,"Consumes `self` and returns the inner value.",58,[[],[T]]],[11,"deadline",R[140],"Returns the instant at which the future will complete.",59,[[["self"]],[R[142]]]],[11,"is_elapsed",E,"Returns true if the `Delay` has elapsed",59,[[["self"]],["bool"]]],[11,"reset",E,"Reset the `Delay` instance to a new deadline.",59,[[["self"],[R[142]]]]],[11,R[28],E,"Create an error representing a shutdown timer.",60,[[],["error"]]],[11,"is_shutdown",E,R[141],60,[[["self"]],["bool"]]],[11,"at_capacity",E,"Create an error representing a timer at capacity.",60,[[],["error"]]],[11,"is_at_capacity",E,R[141],60,[[["self"]],["bool"]]],[11,"now",E,"Returns an instant corresponding to \"now\".",61,[[],[R[142]]]],[11,R[38],E,"Create a `tokio::time::Instant` from a `std::time::Instant`.",61,[[[R[142]]],[R[142]]]],[11,"into_std",E,"Convert the value into a `std::time::Instant`.",61,[[],[R[142]]]],[11,"duration_since",E,R[143],61,[[["self"],[R[142]]],[R[29]]]],[11,"checked_duration_since",E,R[143],61,[[["self"],[R[142]]],[[R[30],[R[29]]],[R[29]]]]],[11,"saturating_duration_since",E,R[143],61,[[["self"],[R[142]]],[R[29]]]],[11,"elapsed",E,"Returns the amount of time elapsed since this instant was…",61,[[["self"]],[R[29]]]],[11,R[216],E,"Returns `Some(t)` where `t` is the time `self + duration`…",61,[[["self"],[R[29]]],[[R[142]],[R[30],[R[142]]]]]],[11,R[217],E,"Returns `Some(t)` where `t` is the time `self - duration`…",61,[[["self"],[R[29]]],[[R[142]],[R[30],[R[142]]]]]],[11,"new",E,"Create a new `Interval` that starts at `at` and yields…",62,[[[R[142]],[R[29]]],["interval"]]],[11,"new_interval",E,"Creates new `Interval` that yields with interval of…",62,[[[R[29]]],["interval"]]],[11,"next",E,"Completes when the next instant in the interval has been…",62,[[["self"]]]],[0,R[144],E,R[145],N,N],[3,"Throttle",R[175],R[145],N,N],[11,"new",E,R[145],63,[[[T],[R[29]]],["self"]]],[11,R[14],E,"Acquires a reference to the underlying stream that this…",63,[[["self"]],[T]]],[11,R[15],E,"Acquires a mutable reference to the underlying stream that…",63,[[["self"]],[T]]],[11,R[12],E,"Consumes this combinator, returning the underlying stream.",63,[[],[T]]],[0,R[147],R[140],"Allows a future or stream to execute for a maximum amount…",N,N],[3,"Timeout",R[174],R[146],N,N],[3,"Elapsed",E,"Error returned by `Timeout`.",N,N],[11,"new",E,"Create a new `Timeout` that allows `value` to execute for…",64,[[[T],[R[29]]],[R[147]]]],[11,R[14],E,"Gets a reference to the underlying value in this timeout.",64,[[["self"]],[T]]],[11,R[15],E,"Gets a mutable reference to the underlying value in this…",64,[[["self"]],[T]]],[11,R[12],E,"Consumes this timeout, returning the underlying value.",64,[[],[T]]],[11,"new_at",E,"Create a new `Timeout` that completes when `future`…",64,[[[T],[R[142]]],[R[147]]]],[11,"into",R[7],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[149],E,E,0,[[[U]],[R[8]]]],[11,R[150],E,E,0,[[],[R[8]]]],[11,R[148],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[152],E,E,0,[[["self"]],["typeid"]]],[11,R[155],E,E,1,[[["self"]],[T]]],[11,R[151],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[149],E,E,1,[[[U]],[R[8]]]],[11,R[150],E,E,1,[[],[R[8]]]],[11,R[148],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[152],E,E,1,[[["self"]],["typeid"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[149],E,E,2,[[[U]],[R[8]]]],[11,R[150],E,E,2,[[],[R[8]]]],[11,R[148],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[152],E,E,2,[[["self"]],["typeid"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[149],E,E,65,[[[U]],[R[8]]]],[11,R[150],E,E,65,[[],[R[8]]]],[11,R[148],E,E,65,[[["self"]],[T]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[152],E,E,65,[[["self"]],["typeid"]]],[11,R[157],E,E,65,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,"into",R[21],E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[160],E,E,66,[[["self"]],["string"]]],[11,R[149],E,E,66,[[[U]],[R[8]]]],[11,R[150],E,E,66,[[],[R[8]]]],[11,R[148],E,E,66,[[["self"]],[T]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[152],E,E,66,[[["self"]],["typeid"]]],[11,R[155],E,E,5,[[["self"]],[T]]],[11,R[151],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[149],E,E,5,[[[U]],[R[8]]]],[11,R[150],E,E,5,[[],[R[8]]]],[11,R[148],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[152],E,E,5,[[["self"]],["typeid"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[149],E,E,6,[[[U]],[R[8]]]],[11,R[150],E,E,6,[[],[R[8]]]],[11,R[148],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[152],E,E,6,[[["self"]],["typeid"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[149],E,E,7,[[[U]],[R[8]]]],[11,R[150],E,E,7,[[],[R[8]]]],[11,R[148],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[152],E,E,7,[[["self"]],["typeid"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[149],E,E,8,[[[U]],[R[8]]]],[11,R[150],E,E,8,[[],[R[8]]]],[11,R[148],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[152],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[149],E,E,67,[[[U]],[R[8]]]],[11,R[150],E,E,67,[[],[R[8]]]],[11,R[148],E,E,67,[[["self"]],[T]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[152],E,E,67,[[["self"]],["typeid"]]],[11,R[168],E,E,67,[[["f"],[R[23]],["pin"]],["poll"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[149],E,E,68,[[[U]],[R[8]]]],[11,R[150],E,E,68,[[],[R[8]]]],[11,R[148],E,E,68,[[["self"]],[T]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[152],E,E,68,[[["self"]],["typeid"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[149],E,E,69,[[[U]],[R[8]]]],[11,R[150],E,E,69,[[],[R[8]]]],[11,R[148],E,E,69,[[["self"]],[T]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[152],E,E,69,[[["self"]],["typeid"]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[149],E,E,70,[[[U]],[R[8]]]],[11,R[150],E,E,70,[[],[R[8]]]],[11,R[148],E,E,70,[[["self"]],[T]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[152],E,E,70,[[["self"]],["typeid"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[149],E,E,9,[[[U]],[R[8]]]],[11,R[150],E,E,9,[[],[R[8]]]],[11,R[148],E,E,9,[[["self"]],[T]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[152],E,E,9,[[["self"]],["typeid"]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[149],E,E,71,[[[U]],[R[8]]]],[11,R[150],E,E,71,[[],[R[8]]]],[11,R[148],E,E,71,[[["self"]],[T]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[152],E,E,71,[[["self"]],["typeid"]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[149],E,E,72,[[[U]],[R[8]]]],[11,R[150],E,E,72,[[],[R[8]]]],[11,R[148],E,E,72,[[["self"]],[T]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[152],E,E,72,[[["self"]],["typeid"]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[149],E,E,73,[[[U]],[R[8]]]],[11,R[150],E,E,73,[[],[R[8]]]],[11,R[148],E,E,73,[[["self"]],[T]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[152],E,E,73,[[["self"]],["typeid"]]],[11,"into",R[153],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[149],E,E,10,[[[U]],[R[8]]]],[11,R[150],E,E,10,[[],[R[8]]]],[11,R[148],E,E,10,[[["self"]],[T]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[152],E,E,10,[[["self"]],["typeid"]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[149],E,E,74,[[[U]],[R[8]]]],[11,R[150],E,E,74,[[],[R[8]]]],[11,R[148],E,E,74,[[["self"]],[T]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[152],E,E,74,[[["self"]],["typeid"]]],[11,"into",R[31],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[149],E,E,20,[[[U]],[R[8]]]],[11,R[150],E,E,20,[[],[R[8]]]],[11,R[148],E,E,20,[[["self"]],[T]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[152],E,E,20,[[["self"]],["typeid"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[149],E,E,21,[[[U]],[R[8]]]],[11,R[150],E,E,21,[[],[R[8]]]],[11,R[148],E,E,21,[[["self"]],[T]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[152],E,E,21,[[["self"]],["typeid"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[149],E,E,22,[[[U]],[R[8]]]],[11,R[150],E,E,22,[[],[R[8]]]],[11,R[148],E,E,22,[[["self"]],[T]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[152],E,E,22,[[["self"]],["typeid"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[149],E,E,27,[[[U]],[R[8]]]],[11,R[150],E,E,27,[[],[R[8]]]],[11,R[148],E,E,27,[[["self"]],[T]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[152],E,E,27,[[["self"]],["typeid"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[149],E,E,28,[[[U]],[R[8]]]],[11,R[150],E,E,28,[[],[R[8]]]],[11,R[148],E,E,28,[[["self"]],[T]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[152],E,E,28,[[["self"]],["typeid"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[149],E,E,29,[[[U]],[R[8]]]],[11,R[150],E,E,29,[[],[R[8]]]],[11,R[148],E,E,29,[[["self"]],[T]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[152],E,E,29,[[["self"]],["typeid"]]],[11,"into",R[154],E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[149],E,E,75,[[[U]],[R[8]]]],[11,R[150],E,E,75,[[],[R[8]]]],[11,R[148],E,E,75,[[["self"]],[T]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[152],E,E,75,[[["self"]],["typeid"]]],[11,R[155],E,E,76,[[["self"]],[T]]],[11,R[151],E,E,76,[[["self"],[T]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[149],E,E,76,[[[U]],[R[8]]]],[11,R[150],E,E,76,[[],[R[8]]]],[11,R[148],E,E,76,[[["self"]],[T]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[152],E,E,76,[[["self"]],["typeid"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[149],E,E,17,[[[U]],[R[8]]]],[11,R[150],E,E,17,[[],[R[8]]]],[11,R[148],E,E,17,[[["self"]],[T]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[152],E,E,17,[[["self"]],["typeid"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[149],E,E,18,[[[U]],[R[8]]]],[11,R[150],E,E,18,[[],[R[8]]]],[11,R[148],E,E,18,[[["self"]],[T]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[152],E,E,18,[[["self"]],["typeid"]]],[11,"into",R[156],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[149],E,E,19,[[[U]],[R[8]]]],[11,R[150],E,E,19,[[],[R[8]]]],[11,R[148],E,E,19,[[["self"]],[T]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[152],E,E,19,[[["self"]],["typeid"]]],[11,"into",R[42],E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[149],E,E,77,[[[U]],[R[8]]]],[11,R[150],E,E,77,[[],[R[8]]]],[11,R[148],E,E,77,[[["self"]],[T]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[152],E,E,77,[[["self"]],["typeid"]]],[11,R[157],E,E,77,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,"into",R[158],E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[149],E,E,78,[[[U]],[R[8]]]],[11,R[150],E,E,78,[[],[R[8]]]],[11,R[148],E,E,78,[[["self"]],[T]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[152],E,E,78,[[["self"]],["typeid"]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[149],E,E,79,[[[U]],[R[8]]]],[11,R[150],E,E,79,[[],[R[8]]]],[11,R[148],E,E,79,[[["self"]],[T]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[152],E,E,79,[[["self"]],["typeid"]]],[11,"into",R[159],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[149],E,E,25,[[[U]],[R[8]]]],[11,R[150],E,E,25,[[],[R[8]]]],[11,R[148],E,E,25,[[["self"]],[T]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[152],E,E,25,[[["self"]],["typeid"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[149],E,E,24,[[[U]],[R[8]]]],[11,R[150],E,E,24,[[],[R[8]]]],[11,R[148],E,E,24,[[["self"]],[T]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[152],E,E,24,[[["self"]],["typeid"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[160],E,E,23,[[["self"]],["string"]]],[11,R[149],E,E,23,[[[U]],[R[8]]]],[11,R[150],E,E,23,[[],[R[8]]]],[11,R[148],E,E,23,[[["self"]],[T]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[152],E,E,23,[[["self"]],["typeid"]]],[11,"into",R[80],E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[149],E,E,80,[[[U]],[R[8]]]],[11,R[150],E,E,80,[[],[R[8]]]],[11,R[148],E,E,80,[[["self"]],[T]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[152],E,E,80,[[["self"]],["typeid"]]],[11,R[157],E,E,80,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,R[155],E,E,26,[[["self"]],[T]]],[11,R[151],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[149],E,E,26,[[[U]],[R[8]]]],[11,R[150],E,E,26,[[],[R[8]]]],[11,R[148],E,E,26,[[["self"]],[T]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[152],E,E,26,[[["self"]],["typeid"]]],[11,"into",R[161],E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[149],E,E,81,[[[U]],[R[8]]]],[11,R[150],E,E,81,[[],[R[8]]]],[11,R[148],E,E,81,[[["self"]],[T]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[152],E,E,81,[[["self"]],["typeid"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[149],E,E,82,[[[U]],[R[8]]]],[11,R[150],E,E,82,[[],[R[8]]]],[11,R[148],E,E,82,[[["self"]],[T]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[152],E,E,82,[[["self"]],["typeid"]]],[11,"into",R[162],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[149],E,E,32,[[[U]],[R[8]]]],[11,R[150],E,E,32,[[],[R[8]]]],[11,R[148],E,E,32,[[["self"]],[T]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[152],E,E,32,[[["self"]],["typeid"]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[149],E,E,33,[[[U]],[R[8]]]],[11,R[150],E,E,33,[[],[R[8]]]],[11,R[148],E,E,33,[[["self"]],[T]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[152],E,E,33,[[["self"]],["typeid"]]],[11,R[168],E,E,33,[[["f"],[R[23]],["pin"]],["poll"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[149],E,E,83,[[[U]],[R[8]]]],[11,R[150],E,E,83,[[],[R[8]]]],[11,R[148],E,E,83,[[["self"]],[T]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[152],E,E,83,[[["self"]],["typeid"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[149],E,E,84,[[[U]],[R[8]]]],[11,R[150],E,E,84,[[],[R[8]]]],[11,R[148],E,E,84,[[["self"]],[T]]],[11,"borrow",E,E,84,[[["self"]],[T]]],[11,R[152],E,E,84,[[["self"]],["typeid"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[149],E,E,85,[[[U]],[R[8]]]],[11,R[150],E,E,85,[[],[R[8]]]],[11,R[148],E,E,85,[[["self"]],[T]]],[11,"borrow",E,E,85,[[["self"]],[T]]],[11,R[152],E,E,85,[[["self"]],["typeid"]]],[11,"into",R[163],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[149],E,E,34,[[[U]],[R[8]]]],[11,R[150],E,E,34,[[],[R[8]]]],[11,R[148],E,E,34,[[["self"]],[T]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[152],E,E,34,[[["self"]],["typeid"]]],[11,R[155],E,E,35,[[["self"]],[T]]],[11,R[151],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[149],E,E,35,[[[U]],[R[8]]]],[11,R[150],E,E,35,[[],[R[8]]]],[11,R[148],E,E,35,[[["self"]],[T]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[152],E,E,35,[[["self"]],["typeid"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[149],E,E,38,[[[U]],[R[8]]]],[11,R[150],E,E,38,[[],[R[8]]]],[11,R[148],E,E,38,[[["self"]],[T]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[152],E,E,38,[[["self"]],["typeid"]]],[11,"into",R[164],E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[149],E,E,86,[[[U]],[R[8]]]],[11,R[150],E,E,86,[[],[R[8]]]],[11,R[148],E,E,86,[[["self"]],[T]]],[11,"borrow",E,E,86,[[["self"]],[T]]],[11,R[152],E,E,86,[[["self"]],["typeid"]]],[11,R[155],R[165],E,39,[[["self"]],[T]]],[11,R[151],E,E,39,[[["self"],[T]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[149],E,E,39,[[[U]],[R[8]]]],[11,R[150],E,E,39,[[],[R[8]]]],[11,R[148],E,E,39,[[["self"]],[T]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[152],E,E,39,[[["self"]],["typeid"]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[149],E,E,87,[[[U]],[R[8]]]],[11,R[150],E,E,87,[[],[R[8]]]],[11,R[148],E,E,87,[[["self"]],[T]]],[11,"borrow",E,E,87,[[["self"]],[T]]],[11,R[152],E,E,87,[[["self"]],["typeid"]]],[11,"into",R[123],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[149],E,E,41,[[[U]],[R[8]]]],[11,R[150],E,E,41,[[],[R[8]]]],[11,R[148],E,E,41,[[["self"]],[T]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[152],E,E,41,[[["self"]],["typeid"]]],[11,R[155],E,E,42,[[["self"]],[T]]],[11,R[151],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[149],E,E,42,[[[U]],[R[8]]]],[11,R[150],E,E,42,[[],[R[8]]]],[11,R[148],E,E,42,[[["self"]],[T]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[152],E,E,42,[[["self"]],["typeid"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[149],E,E,47,[[[U]],[R[8]]]],[11,R[150],E,E,47,[[],[R[8]]]],[11,R[148],E,E,47,[[["self"]],[T]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[152],E,E,47,[[["self"]],["typeid"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[160],E,E,88,[[["self"]],["string"]]],[11,R[149],E,E,88,[[[U]],[R[8]]]],[11,R[150],E,E,88,[[],[R[8]]]],[11,R[148],E,E,88,[[["self"]],[T]]],[11,"borrow",E,E,88,[[["self"]],[T]]],[11,R[152],E,E,88,[[["self"]],["typeid"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[149],E,E,53,[[[U]],[R[8]]]],[11,R[150],E,E,53,[[],[R[8]]]],[11,R[148],E,E,53,[[["self"]],[T]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[152],E,E,53,[[["self"]],["typeid"]]],[11,"into",R[166],E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[149],E,E,43,[[[U]],[R[8]]]],[11,R[150],E,E,43,[[],[R[8]]]],[11,R[148],E,E,43,[[["self"]],[T]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[152],E,E,43,[[["self"]],["typeid"]]],[11,R[157],E,E,43,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,R[155],E,E,44,[[["self"]],[T]]],[11,R[151],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[149],E,E,44,[[[U]],[R[8]]]],[11,R[150],E,E,44,[[],[R[8]]]],[11,R[148],E,E,44,[[["self"]],[T]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[152],E,E,44,[[["self"]],["typeid"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[149],E,E,45,[[[U]],[R[8]]]],[11,R[150],E,E,45,[[],[R[8]]]],[11,R[148],E,E,45,[[["self"]],[T]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[152],E,E,45,[[["self"]],["typeid"]]],[11,R[157],E,E,45,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,R[155],E,E,46,[[["self"]],[T]]],[11,R[151],E,E,46,[[["self"],[T]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[149],E,E,46,[[[U]],[R[8]]]],[11,R[150],E,E,46,[[],[R[8]]]],[11,R[148],E,E,46,[[["self"]],[T]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[152],E,E,46,[[["self"]],["typeid"]]],[11,"into",R[167],E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[160],E,E,89,[[["self"]],["string"]]],[11,R[149],E,E,89,[[[U]],[R[8]]]],[11,R[150],E,E,89,[[],[R[8]]]],[11,R[148],E,E,89,[[["self"]],[T]]],[11,"borrow",E,E,89,[[["self"]],[T]]],[11,R[152],E,E,89,[[["self"]],["typeid"]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[160],E,E,90,[[["self"]],["string"]]],[11,R[149],E,E,90,[[[U]],[R[8]]]],[11,R[150],E,E,90,[[],[R[8]]]],[11,R[148],E,E,90,[[["self"]],[T]]],[11,"borrow",E,E,90,[[["self"]],[T]]],[11,R[152],E,E,90,[[["self"]],["typeid"]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[160],E,E,91,[[["self"]],["string"]]],[11,R[149],E,E,91,[[[U]],[R[8]]]],[11,R[150],E,E,91,[[],[R[8]]]],[11,R[148],E,E,91,[[["self"]],[T]]],[11,"borrow",E,E,91,[[["self"]],[T]]],[11,R[152],E,E,91,[[["self"]],["typeid"]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[160],E,E,92,[[["self"]],["string"]]],[11,R[149],E,E,92,[[[U]],[R[8]]]],[11,R[150],E,E,92,[[],[R[8]]]],[11,R[148],E,E,92,[[["self"]],[T]]],[11,"borrow",E,E,92,[[["self"]],[T]]],[11,R[152],E,E,92,[[["self"]],["typeid"]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[160],E,E,93,[[["self"]],["string"]]],[11,R[149],E,E,93,[[[U]],[R[8]]]],[11,R[150],E,E,93,[[],[R[8]]]],[11,R[148],E,E,93,[[["self"]],[T]]],[11,"borrow",E,E,93,[[["self"]],[T]]],[11,R[152],E,E,93,[[["self"]],["typeid"]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[160],E,E,94,[[["self"]],["string"]]],[11,R[149],E,E,94,[[[U]],[R[8]]]],[11,R[150],E,E,94,[[],[R[8]]]],[11,R[148],E,E,94,[[["self"]],[T]]],[11,"borrow",E,E,94,[[["self"]],[T]]],[11,R[152],E,E,94,[[["self"]],["typeid"]]],[11,"into",R[125],E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[149],E,E,48,[[[U]],[R[8]]]],[11,R[150],E,E,48,[[],[R[8]]]],[11,R[148],E,E,48,[[["self"]],[T]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[152],E,E,48,[[["self"]],["typeid"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[149],E,E,49,[[[U]],[R[8]]]],[11,R[150],E,E,49,[[],[R[8]]]],[11,R[148],E,E,49,[[["self"]],[T]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[152],E,E,49,[[["self"]],["typeid"]]],[11,R[168],E,E,49,[[["f"],[R[23]],["pin"]],["poll"]]],[11,"into",R[169],E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[160],E,E,95,[[["self"]],["string"]]],[11,R[149],E,E,95,[[[U]],[R[8]]]],[11,R[150],E,E,95,[[],[R[8]]]],[11,R[148],E,E,95,[[["self"]],[T]]],[11,"borrow",E,E,95,[[["self"]],[T]]],[11,R[152],E,E,95,[[["self"]],["typeid"]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[160],E,E,96,[[["self"]],["string"]]],[11,R[149],E,E,96,[[[U]],[R[8]]]],[11,R[150],E,E,96,[[],[R[8]]]],[11,R[148],E,E,96,[[["self"]],[T]]],[11,"borrow",E,E,96,[[["self"]],[T]]],[11,R[152],E,E,96,[[["self"]],["typeid"]]],[11,"into",R[170],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[149],E,E,50,[[[U]],[R[8]]]],[11,R[150],E,E,50,[[],[R[8]]]],[11,R[148],E,E,50,[[["self"]],[T]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[152],E,E,50,[[["self"]],["typeid"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[149],E,E,51,[[[U]],[R[8]]]],[11,R[150],E,E,51,[[],[R[8]]]],[11,R[148],E,E,51,[[["self"]],[T]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[152],E,E,51,[[["self"]],["typeid"]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[160],E,E,97,[[["self"]],["string"]]],[11,R[149],E,E,97,[[[U]],[R[8]]]],[11,R[150],E,E,97,[[],[R[8]]]],[11,R[148],E,E,97,[[["self"]],[T]]],[11,"borrow",E,E,97,[[["self"]],[T]]],[11,R[152],E,E,97,[[["self"]],["typeid"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[160],E,E,52,[[["self"]],["string"]]],[11,R[149],E,E,52,[[[U]],[R[8]]]],[11,R[150],E,E,52,[[],[R[8]]]],[11,R[148],E,E,52,[[["self"]],[T]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[152],E,E,52,[[["self"]],["typeid"]]],[11,R[155],R[132],E,54,[[["self"]],[T]]],[11,R[151],E,E,54,[[["self"],[T]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[149],E,E,54,[[[U]],[R[8]]]],[11,R[150],E,E,54,[[],[R[8]]]],[11,R[148],E,E,54,[[["self"]],[T]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[152],E,E,54,[[["self"]],["typeid"]]],[11,R[157],E,E,54,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[149],E,E,55,[[[U]],[R[8]]]],[11,R[150],E,E,55,[[],[R[8]]]],[11,R[148],E,E,55,[[["self"]],[T]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[152],E,E,55,[[["self"]],["typeid"]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[149],E,E,98,[[[U]],[R[8]]]],[11,R[150],E,E,98,[[],[R[8]]]],[11,R[148],E,E,98,[[["self"]],[T]]],[11,"borrow",E,E,98,[[["self"]],[T]]],[11,R[152],E,E,98,[[["self"]],["typeid"]]],[11,"into",R[171],E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[160],E,E,99,[[["self"]],["string"]]],[11,R[149],E,E,99,[[[U]],[R[8]]]],[11,R[150],E,E,99,[[],[R[8]]]],[11,R[148],E,E,99,[[["self"]],[T]]],[11,"borrow",E,E,99,[[["self"]],[T]]],[11,R[152],E,E,99,[[["self"]],["typeid"]]],[11,"into",R[172],E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[160],E,E,56,[[["self"]],["string"]]],[11,R[149],E,E,56,[[[U]],[R[8]]]],[11,R[150],E,E,56,[[],[R[8]]]],[11,R[148],E,E,56,[[["self"]],[T]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[152],E,E,56,[[["self"]],["typeid"]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[149],E,E,100,[[[U]],[R[8]]]],[11,R[150],E,E,100,[[],[R[8]]]],[11,R[148],E,E,100,[[["self"]],[T]]],[11,"borrow",E,E,100,[[["self"]],[T]]],[11,R[152],E,E,100,[[["self"]],["typeid"]]],[11,R[168],E,E,100,[[["f"],[R[23]],["pin"]],["poll"]]],[11,R[155],R[140],E,101,[[["self"]],[T]]],[11,R[151],E,E,101,[[["self"],[T]]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[149],E,E,101,[[[U]],[R[8]]]],[11,R[150],E,E,101,[[],[R[8]]]],[11,R[148],E,E,101,[[["self"]],[T]]],[11,"borrow",E,E,101,[[["self"]],[T]]],[11,R[152],E,E,101,[[["self"]],["typeid"]]],[11,"into",R[173],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[149],E,E,57,[[[U]],[R[8]]]],[11,R[150],E,E,57,[[],[R[8]]]],[11,R[148],E,E,57,[[["self"]],[T]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[152],E,E,57,[[["self"]],["typeid"]]],[11,R[157],E,E,57,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,"into",R[140],E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[149],E,E,59,[[[U]],[R[8]]]],[11,R[150],E,E,59,[[],[R[8]]]],[11,R[148],E,E,59,[[["self"]],[T]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[152],E,E,59,[[["self"]],["typeid"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[160],E,E,60,[[["self"]],["string"]]],[11,R[149],E,E,60,[[[U]],[R[8]]]],[11,R[150],E,E,60,[[],[R[8]]]],[11,R[148],E,E,60,[[["self"]],[T]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[152],E,E,60,[[["self"]],["typeid"]]],[11,R[155],E,E,61,[[["self"]],[T]]],[11,R[151],E,E,61,[[["self"],[T]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[149],E,E,61,[[[U]],[R[8]]]],[11,R[150],E,E,61,[[],[R[8]]]],[11,R[148],E,E,61,[[["self"]],[T]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[152],E,E,61,[[["self"]],["typeid"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[149],E,E,62,[[[U]],[R[8]]]],[11,R[150],E,E,62,[[],[R[8]]]],[11,R[148],E,E,62,[[["self"]],[T]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[152],E,E,62,[[["self"]],["typeid"]]],[11,"into",R[174],E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[149],E,E,64,[[[U]],[R[8]]]],[11,R[150],E,E,64,[[],[R[8]]]],[11,R[148],E,E,64,[[["self"]],[T]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[152],E,E,64,[[["self"]],["typeid"]]],[11,R[168],E,E,64,[[["f"],[R[23]],["pin"]],["poll"]]],[11,R[157],E,E,64,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,"into",R[173],E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[149],E,E,58,[[[U]],[R[8]]]],[11,R[150],E,E,58,[[],[R[8]]]],[11,R[148],E,E,58,[[["self"]],[T]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[152],E,E,58,[[["self"]],["typeid"]]],[11,R[155],E,E,102,[[["self"]],[T]]],[11,R[151],E,E,102,[[["self"],[T]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[149],E,E,102,[[[U]],[R[8]]]],[11,R[150],E,E,102,[[],[R[8]]]],[11,R[148],E,E,102,[[["self"]],[T]]],[11,"borrow",E,E,102,[[["self"]],[T]]],[11,R[152],E,E,102,[[["self"]],["typeid"]]],[11,"into",R[175],E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[149],E,E,63,[[[U]],[R[8]]]],[11,R[150],E,E,63,[[],[R[8]]]],[11,R[148],E,E,63,[[["self"]],[T]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[152],E,E,63,[[["self"]],["typeid"]]],[11,R[157],E,E,63,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,"into",R[174],E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[160],E,E,103,[[["self"]],["string"]]],[11,R[149],E,E,103,[[[U]],[R[8]]]],[11,R[150],E,E,103,[[],[R[8]]]],[11,R[148],E,E,103,[[["self"]],[T]]],[11,"borrow",E,E,103,[[["self"]],[T]]],[11,R[152],E,E,103,[[["self"]],["typeid"]]],[11,"from",R[21],"Converts an [`ErrorKind`] into an [`Error`].",66,[[[R[176]]],["error"]]],[11,"from",E,"Converts a [`NulError`] into a [`io::Error`].",66,[[["nulerror"]],["error"]]],[11,"from",E,E,66,[[["intoinnererror"]],["error"]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"eq",E,E,5,[[["self"],[R[176]]],["bool"]]],[11,"description",E,E,66,[[["self"]],["str"]]],[11,"cause",E,E,66,[[["self"]],[[R[30],["error"]],["error"]]]],[11,"source",E,E,66,[[["self"]],[["error"],[R[30],["error"]]]]],[11,"fmt",E,E,66,[[["self"],[R[177]]],[[R[8],["error"]],["error"]]]],[11,"cmp",E,E,5,[[["self"],[R[176]]],[R[178]]]],[11,"fmt",E,E,66,[[["self"],[R[177]]],[[R[8],["error"]],["error"]]]],[11,"fmt",E,E,5,[[["self"],[R[177]]],[[R[8],["error"]],["error"]]]],[11,"clone",E,E,5,[[["self"]],[R[176]]]],[11,R[179],E,E,5,[[["self"],[R[176]]],[[R[178]],[R[30],[R[178]]]]]],[11,"fmt",R[140],E,101,[[["self"],[R[177]]],[[R[8],["error"]],["error"]]]],[11,"div_assign",E,E,101,[[["self"],["u32"]]]],[11,R[186],E,E,101,[[["self"],[R[29]]]]],[11,"div",E,E,101,[[["u32"]],[R[29]]]],[11,"hash",E,E,101,[[["self"],["__h"]]]],[11,"mul",E,E,101,[[["u32"]],[R[29]]]],[11,"sum",E,E,101,[[["i"]],[R[29]]]],[11,"sum",E,E,101,[[["i"]],[R[29]]]],[11,"mul_assign",E,E,101,[[["self"],["u32"]]]],[11,"sub",E,E,101,[[[R[29]]],[R[29]]]],[11,"eq",E,E,101,[[["self"],[R[29]]],["bool"]]],[11,"ne",E,E,101,[[["self"],[R[29]]],["bool"]]],[11,"clone",E,E,101,[[["self"]],[R[29]]]],[11,R[179],E,E,101,[[["self"],[R[29]]],[[R[178]],[R[30],[R[178]]]]]],[11,"lt",E,E,101,[[["self"],[R[29]]],["bool"]]],[11,"le",E,E,101,[[["self"],[R[29]]],["bool"]]],[11,"gt",E,E,101,[[["self"],[R[29]]],["bool"]]],[11,"ge",E,E,101,[[["self"],[R[29]]],["bool"]]],[11,R[182],E,E,101,[[],[R[29]]]],[11,"add",E,E,101,[[[R[29]]],[R[29]]]],[11,R[187],E,E,101,[[["self"],[R[29]]]]],[11,"cmp",E,E,101,[[["self"],[R[29]]],[R[178]]]],[11,R[89],R[21],E,6,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[180],E,E,6,[[["pin"],["self"],["usize"]]]],[11,R[89],E,E,7,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[180],E,E,7,[[["pin"],["self"],["usize"]]]],[11,R[89],E,E,8,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[180],E,E,8,[[["pin"],["self"],["usize"]]]],[11,R[89],E,E,68,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[180],E,E,68,[[["pin"],["self"],["usize"]]]],[11,R[89],E,E,9,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[180],E,E,9,[[["pin"],["self"],["usize"]]]],[11,R[95],R[7],E,0,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[95],R[21],E,6,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[93],E,E,6,[[["self"]],["bool"]]],[11,R[95],E,E,7,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[93],E,E,7,[[["self"]],["bool"]]],[11,R[95],E,E,8,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[93],E,E,8,[[["self"]],["bool"]]],[11,R[95],E,E,68,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[95],E,E,69,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[93],E,E,9,[[["self"]],["bool"]]],[11,R[95],E,E,9,[[["self"],["pin"],[R[23]]],[[R[8],["usize","error"]],["poll",[R[8]]]]]],[11,R[95],R[153],E,10,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[98],E,E,10,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[95],R[21],E,72,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[95],R[156],E,19,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[93],R[158],E,78,[[["self"]],["bool"]]],[11,R[95],E,E,78,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[98],E,E,78,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[93],R[31],E,21,[[["self"]],["bool"]]],[11,R[95],E,E,21,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[98],E,E,21,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[93],R[161],E,81,[[["self"]],["bool"]]],[11,R[95],E,E,81,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[98],E,E,81,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[93],R[31],E,29,[[["self"]],["bool"]]],[11,R[95],E,E,29,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[98],E,E,29,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[95],R[162],E,84,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[95],E,E,85,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[102],R[7],E,0,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,0,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[105],E,E,0,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[102],R[21],E,6,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,6,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,6,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[102],E,E,7,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,7,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,7,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[102],E,E,8,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,8,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,8,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[102],E,E,70,[[["self"],["pin"],[R[23]]],[[R[8],["usize","error"]],["poll",[R[8]]]]]],[11,R[87],E,E,70,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[105],E,E,70,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[102],R[153],E,74,[[["self"],["pin"],[R[23]]],[[R[8],["usize","error"]],["poll",[R[8]]]]]],[11,R[87],E,E,74,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[105],E,E,74,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[107],E,E,74,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize","error"]],["poll",[R[8]]]]]],[11,R[102],R[21],E,71,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,71,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[105],E,E,71,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[102],E,E,73,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,73,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[105],E,E,73,[[["pin"],["self"],[R[23]]],[[R[8],["error"]],["poll",[R[8]]]]]],[11,R[102],R[156],E,19,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,19,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,19,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[102],R[158],E,79,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,79,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,79,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[107],E,E,79,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[102],R[31],E,21,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,21,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,21,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[107],E,E,21,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[102],R[161],E,82,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,82,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,82,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[107],E,E,82,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[102],R[31],E,29,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,29,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,29,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[107],E,E,29,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[102],R[162],E,83,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,83,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,83,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,"unpark",R[154],E,17,[[["self"]]]],[11,"park",E,E,17,[[["self"]],[R[8]]]],[11,R[181],E,E,17,[[["self"],[R[29]]],[R[8]]]],[11,"unpark",E,E,76,[[["self"]]]],[11,"drop",E,E,75,[[["self"]]]],[11,"drop",E,E,18,[[["self"]]]],[11,"drop",R[156],E,19,[[["self"]]]],[11,"drop",R[123],E,88,[[["self"]]]],[11,"drop",R[125],E,48,[[["self"]]]],[11,"drop",E,E,49,[[["self"]]]],[11,"drop",R[132],E,54,[[["self"]]]],[11,"drop",E,E,55,[[["self"]]]],[11,"drop",R[172],E,100,[[["self"]]]],[11,R[182],R[7],E,1,[[],["self"]]],[11,R[182],R[163],E,34,[[],["self"]]],[11,R[182],R[123],E,47,[[],["self"]]],[11,R[182],R[170],E,51,[[],["self"]]],[11,R[182],R[123],E,53,[[],["self"]]],[11,R[182],R[173],E,57,[[],[R[138]]]],[11,"clone",R[7],E,1,[[["self"]],[R[5]]]],[11,"clone",R[154],E,76,[[["self"]],["handle"]]],[11,"clone",R[80],E,26,[[["self"]],["ucred"]]],[11,"clone",R[163],E,35,[[["self"]],["handle"]]],[11,"clone",R[165],E,39,[[["self"]],[R[183]]]],[11,"clone",R[123],E,42,[[["self"]],["barrierwaitresult"]]],[11,"clone",R[166],E,44,[[["self"]],["self"]]],[11,"clone",E,E,46,[[["self"]],["self"]]],[11,"clone",R[132],E,54,[[["self"]],["self"]]],[11,"clone",R[173],E,102,[[["self"]],["key"]]],[11,"clone",R[140],E,61,[[["self"]],[R[142]]]],[11,"as_ref",R[158],E,78,[[["self"]],[R[46]]]],[11,"as_ref",E,E,79,[[["self"]],[R[46]]]],[11,"as_ref",R[159],E,25,[[["self"]],[R[52]]]],[11,"as_ref",E,E,24,[[["self"]],[R[52]]]],[11,"as_ref",R[161],E,81,[[["self"]],[R[81]]]],[11,"as_ref",E,E,82,[[["self"]],[R[81]]]],[11,R[179],R[140],E,61,[[["self"],[R[142]]],[[R[30],[R[178]]],[R[178]]]]],[11,"lt",E,E,61,[[["self"],[R[142]]],["bool"]]],[11,"le",E,E,61,[[["self"],[R[142]]],["bool"]]],[11,"gt",E,E,61,[[["self"],[R[142]]],["bool"]]],[11,"ge",E,E,61,[[["self"],[R[142]]],["bool"]]],[11,"eq",R[80],E,26,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,26,[[["self"],["ucred"]],["bool"]]],[11,"eq",R[140],E,61,[[["self"],[R[142]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[142]]],["bool"]]],[11,"from",R[7],E,0,[[["file"]],["self"]]],[11,"from",E,E,1,[[[R[5]]],[R[5]]]],[11,"from",R[21],E,7,[[[R[184]],[R[185],[R[184]]]],["self"]]],[11,"from",E,E,7,[[[R[184],[R[185]]],[R[185]]],["self"]]],[11,"from",R[162],E,32,[[["stdcommand"]],[R[109]]]],[11,"from",R[167],E,90,[[],[R[119]]]],[11,"from",E,E,93,[[],[R[122]]]],[11,"from",R[123],E,47,[[[T]],["self"]]],[11,"from",R[21],E,66,[[[R[135]]],["error"]]],[11,"from",E,E,66,[[["elapsed"]],["error"]]],[11,R[261],R[123],E,88,[[["self"]]]],[11,"hash",R[80],E,26,[[["self"],["__h"]]]],[11,"add",R[140],E,61,[[[R[29]]],[R[142]]]],[11,"sub",E,E,61,[[[R[142]]],[R[29]]]],[11,"sub",E,E,61,[[[R[29]]],[R[142]]]],[11,R[186],E,E,61,[[["self"],[R[29]]]]],[11,R[187],E,E,61,[[["self"],[R[29]]]]],[11,"deref",R[123],E,88,[[["self"]]]],[11,"deref",R[132],E,98,[[["self"]],[T]]],[11,"fmt",R[7],E,0,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,1,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,65,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,2,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[21],E,6,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,7,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,8,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,67,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,68,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,69,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,70,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,9,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[153],E,10,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,74,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[21],E,71,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,72,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,73,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[154],E,75,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,17,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,76,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,18,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[156],E,19,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[42],E,77,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[31],E,20,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[158],E,78,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,79,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[31],E,21,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,22,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[159],E,25,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,24,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,23,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[31],E,27,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[80],E,80,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[31],E,28,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[161],E,81,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,82,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[31],E,29,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[80],E,26,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[162],E,32,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,33,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,83,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,84,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,85,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[163],E,34,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,35,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,38,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[164],E,86,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[165],E,39,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,87,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[123],E,41,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,42,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[166],E,44,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,43,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[167],E,89,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,90,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,91,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[166],E,46,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,45,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[167],E,92,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,93,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,94,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[123],E,47,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,88,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[125],E,48,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,49,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[169],E,95,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,96,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[170],E,51,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,97,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,52,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,50,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[123],E,53,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[132],E,54,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,55,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,98,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[171],E,99,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[172],E,56,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,100,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[173],E,57,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,58,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,102,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[140],E,59,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,60,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,61,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,62,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[175],E,63,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[174],E,64,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,103,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[159],E,23,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[167],E,89,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,90,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,91,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,92,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,93,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,94,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[123],E,88,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[169],E,95,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,96,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[170],E,97,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,52,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[171],E,99,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[172],E,56,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[140],E,60,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[174],E,103,[[["self"],[R[177]]],[R[8]]]],[11,R[149],R[31],R[188],20,[[[R[39]]],[R[8]]]],[11,R[149],E,R[188],21,[[[R[46]]],[R[8]]]],[11,R[149],E,R[188],22,[[[R[52]]],[R[8]]]],[11,R[149],E,R[188],27,[[[R[70]]],[R[8]]]],[11,R[149],E,R[188],28,[[[R[76]]],[R[8]]]],[11,R[149],E,R[188],29,[[[R[81]]],[R[8]]]],[11,R[189],R[154],E,17,[[["self"]],["rawfd"]]],[11,R[189],R[31],E,20,[[["self"]],["rawfd"]]],[11,R[189],E,E,21,[[["self"]],["rawfd"]]],[11,R[189],E,E,22,[[["self"]],["rawfd"]]],[11,R[189],E,E,27,[[["self"]],["rawfd"]]],[11,R[189],E,E,28,[[["self"]],["rawfd"]]],[11,R[189],E,E,29,[[["self"]],["rawfd"]]],[11,R[189],R[162],E,83,[[["self"]],["rawfd"]]],[11,R[189],E,E,84,[[["self"]],["rawfd"]]],[11,R[189],E,E,85,[[["self"]],["rawfd"]]],[11,"ino",R[7],E,2,[[["self"]],["u64"]]],[11,"poll",R[21],E,67,[[["pin"],["self"],[R[23]]],[[R[8],["u64"]],["poll",[R[8]]]]]],[11,"poll",R[162],E,33,[[["pin"],["self"],[R[23]]],["poll"]]],[11,"poll",R[125],E,49,[[["pin"],["self"],[R[23]]],["poll"]]],[11,"poll",R[172],E,100,[[["pin"],["self"],[R[23]]],["poll"]]],[11,"poll",R[140],E,59,[[["pin"],["self"],[R[23]]],["poll"]]],[11,"poll",R[174],E,64,[[["pin"],["self"],[R[23]]],["poll"]]],[11,R[115],R[7],E,65,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],R[42],E,77,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],R[80],E,80,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],R[164],E,86,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],R[165],E,87,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],R[166],E,43,[[["pin"],["self"],[R[23]]],[[R[30]],["poll",[R[30]]]]]],[11,R[115],E,E,45,[[["pin"],["self"],[R[23]]],[[R[30]],["poll",[R[30]]]]]],[11,R[115],R[132],E,54,[[["pin"],["self"],[R[23]]],[[R[30]],["poll",[R[30]]]]]],[11,R[115],R[173],E,57,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],R[140],E,62,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],R[175],E,63,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],R[174],E,64,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,"is_terminated",R[140],E,62,[[["self"]],["bool"]]],[11,R[190],R[166],E,44,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[191],E,E,44,[[["pin"],["self"],[T]],[R[8]]]],[11,R[87],E,E,44,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[192],E,E,44,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[190],E,E,46,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[191],E,E,46,[[["pin"],["self"],[T]],[R[8]]]],[11,R[87],E,E,46,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[192],E,E,46,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[190],R[132],E,55,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[191],E,E,55,[[["pin"],["self"],[T]],[R[8]]]],[11,R[87],E,E,55,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[192],E,E,55,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,"new",R[21],"Creates a new I/O error from a known kind of error as well…",66,[[[R[176]],["e"]],["error"]]],[11,"last_os_error",E,"Returns an error representing the last OS error which…",66,[[],["error"]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OS…",66,[[["i32"]],["error"]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",66,[[["self"]],[[R[30],["i32"]],["i32"]]]],[11,R[14],E,"Returns a reference to the inner error wrapped by this…",66,[[["self"]],[["error"],[R[30],["error"]]]]],[11,R[15],E,"Returns a mutable reference to the inner error wrapped by…",66,[[["self"]],[["error"],[R[30],["error"]]]]],[11,R[12],E,"Consumes the `Error`, returning its inner error (if any).",66,[[],[[R[30],["box"]],["box",["error"]]]]],[11,"kind",E,"Returns the corresponding `ErrorKind` for this error.",66,[[["self"]],[R[176]]]],[11,R[93],E,R[94],12,[[["self"]],["bool"]]],[11,R[98],E,R[99],12,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[107],E,R[108],13,[[["self"],["b"],["pin"],[R[23]]],[[R[8],["usize","error"]],["poll",[R[8]]]]]],[11,R[193],E,R[24],14,[[["vec"],["self"],["u8"]],[R[194]]]],[11,R[195],E,R[24],14,[[["self"],["string"]],["readline"]]],[11,"split",E,R[196],14,[[["u8"]],["split"]]],[11,"lines",E,R[197],14,[[],["lines"]]],[11,"chain",E,R[198],15,[[["r"]],["chain"]]],[11,"copy",E,R[199],15,[[["self"],["w"]],[["copy"],["sized"]]]],[11,"read",E,R[200],15,[[["self"]],["read"]]],[11,R[201],E,R[202],15,[[["self"]],[R[203]]]],[11,R[204],E,R[27],15,[[["vec"],["self"]],[R[205]]]],[11,R[26],E,R[27],15,[[["self"],["string"]],[R[206]]]],[11,"take",E,R[207],15,[[["u64"]],["take"]]],[11,"write",E,R[208],16,[[["self"]],["write"]]],[11,R[209],E,R[210],16,[[["self"]],["writeall"]]],[11,"flush",E,R[211],16,[[["self"]],["flush"]]],[11,R[28],E,R[212],16,[[["self"]],[R[28]]]],[11,R[12],R[167],R[213],90,[[],[T]]],[11,R[129],E,"Did the send fail because the channel has been closed?",90,[[["self"]],["bool"]]],[11,"is_full",E,"Did the send fail because the channel was at capacity?",90,[[["self"]],["bool"]]],[11,R[12],E,R[213],93,[[],[T]]],[18,"SECOND",R[140],"The duration of one second.",101,N],[18,"MILLISECOND",E,"The duration of one millisecond.",101,N],[18,"MICROSECOND",E,"The duration of one microsecond.",101,N],[18,"NANOSECOND",E,"The duration of one nanosecond.",101,N],[11,"new",E,R[214],101,[[["u32"],["u64"]],[R[29]]]],[11,"from_secs",E,R[214],101,[[["u64"]],[R[29]]]],[11,"from_millis",E,R[214],101,[[["u64"]],[R[29]]]],[11,"from_micros",E,R[214],101,[[["u64"]],[R[29]]]],[11,"from_nanos",E,R[214],101,[[["u64"]],[R[29]]]],[11,"as_secs",E,"Returns the number of whole seconds contained by this…",101,[[["self"]],["u64"]]],[11,"subsec_millis",E,R[215],101,[[["self"]],["u32"]]],[11,"subsec_micros",E,R[215],101,[[["self"]],["u32"]]],[11,"subsec_nanos",E,"Returns the fractional part of this `Duration`, in…",101,[[["self"]],["u32"]]],[11,"as_millis",E,"Returns the total number of whole milliseconds contained…",101,[[["self"]],["u128"]]],[11,"as_micros",E,"Returns the total number of whole microseconds contained…",101,[[["self"]],["u128"]]],[11,"as_nanos",E,"Returns the total number of nanoseconds contained by this…",101,[[["self"]],["u128"]]],[11,R[216],E,"Checked `Duration` addition. Computes `self + other`,…",101,[[[R[29]]],[[R[30],[R[29]]],[R[29]]]]],[11,R[217],E,"Checked `Duration` subtraction. Computes `self - other`,…",101,[[[R[29]]],[[R[30],[R[29]]],[R[29]]]]],[11,"checked_mul",E,"Checked `Duration` multiplication. Computes `self *…",101,[[["u32"]],[[R[30],[R[29]]],[R[29]]]]],[11,"checked_div",E,"Checked `Duration` division. Computes `self / other`,…",101,[[["u32"]],[[R[30],[R[29]]],[R[29]]]]],[11,"as_secs_f64",E,R[218],101,[[["self"]],["f64"]]],[11,"as_secs_f32",E,R[218],101,[[["self"]],["f32"]]],[11,"from_secs_f64",E,R[214],101,[[["f64"]],[R[29]]]],[11,"from_secs_f32",E,R[214],101,[[["f32"]],[R[29]]]],[11,"mul_f64",E,"Multiplies `Duration` by `f64`.",101,[[["f64"]],[R[29]]]],[11,"mul_f32",E,"Multiplies `Duration` by `f32`.",101,[[["f32"]],[R[29]]]],[11,"div_f64",E,"Divide `Duration` by `f64`.",101,[[["f64"]],[R[29]]]],[11,"div_f32",E,"Divide `Duration` by `f32`.",101,[[["f32"]],[R[29]]]],[11,"div_duration_f64",E,"Divide `Duration` by `Duration` and return `f64`.",101,[[[R[29]]],["f64"]]],[11,"div_duration_f32",E,"Divide `Duration` by `Duration` and return `f32`.",101,[[[R[29]]],["f32"]]]],"p":[[3,"File"],[3,R[219]],[3,"DirEntry"],[8,"Future"],[8,R[220]],[4,R[221]],[3,R[222]],[3,R[223]],[3,R[224]],[3,"Take"],[3,R[43]],[8,R[88]],[8,R[92]],[8,R[100]],[8,R[225]],[8,R[226]],[8,R[227]],[3,"Reactor"],[3,R[228]],[3,R[229]],[3,R[34]],[3,R[36]],[3,R[50]],[3,R[230]],[3,R[231]],[3,R[232]],[3,"UCred"],[3,R[63]],[3,R[66]],[3,R[68]],[8,"Stream"],[8,"Sink"],[3,"Command"],[3,"Child"],[3,R[300]],[3,"Handle"],[8,"Park"],[8,"Unpark"],[3,"Runtime"],[3,R[233]],[8,R[234]],[3,"Barrier"],[3,R[235]],[3,R[130]],[3,"Sender"],[3,R[236]],[3,R[237]],[3,"Mutex"],[3,"Sender"],[3,R[130]],[3,R[238]],[3,"Permit"],[3,R[239]],[3,R[240]],[3,R[130]],[3,"Sender"],[3,R[241]],[3,R[137]],[3,"Expired"],[3,"Delay"],[3,"Error"],[3,"Instant"],[3,"Interval"],[3,"Throttle"],[3,"Timeout"],[3,"ReadDir"],[3,"Error"],[3,"Copy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,R[44]],[3,R[242]],[3,"Handle"],[3,R[65]],[3,R[43]],[3,R[44]],[3,R[65]],[3,R[43]],[3,R[44]],[3,R[243]],[3,R[244]],[3,R[245]],[3,"CtrlC"],[3,"Signal"],[3,R[246]],[3,R[131]],[3,R[247]],[3,R[124]],[3,R[248]],[3,R[249]],[3,R[250]],[3,R[124]],[3,R[251]],[3,R[252]],[3,"Ref"],[3,R[131]],[3,R[253]],[3,"Duration"],[3,"Key"],[3,"Elapsed"]]};
searchIndex["tokio_macros"]={"doc":"Macros for use with Tokio","i":[[23,"main","tokio_macros",R[254],N,N],[23,"test",E,R[255],N,N]],"p":[]};
searchIndex["tokio_test"]={"doc":"Tokio and Futures based testing utilites","i":[[5,"block_on",R[258],"Runs the provided future, blocking the current thread…",N,[[["future"]]]],[0,"io",E,"A mock type implementing [`AsyncRead`] and [`AsyncWrite`].",N,N],[3,"Mock",R[259],"An I/O object that follows a predefined script.",N,N],[3,"Handle",E,"A handle to send additional actions to the related `Mock`.",N,N],[3,R[300],E,"Builds `Mock` instances.",N,N],[11,"new",E,"Return a new, empty `Builder.",0,[[],["self"]]],[11,"read",E,R[256],0,[[["self"]],["self"]]],[11,"write",E,R[257],0,[[["self"]],["self"]]],[11,"wait",E,"Sequence a wait.",0,[[["self"],[R[29]]],["self"]]],[11,"build",E,"Build a `Mock` value according to the defined script.",0,[[["self"]],["mock"]]],[11,"build_with_handle",E,"Build a `Mock` value paired with a handle",0,[[["self"]]]],[11,"read",E,R[256],1,[[["self"]],["self"]]],[11,"write",E,R[257],1,[[["self"]],["self"]]],[0,"task",R[258],"Futures task based helpers",N,N],[3,"Spawn",R[260],"Future spawned on a mock task",N,N],[5,"spawn",E,"TOOD: dox",N,[[[T]],["spawn"]]],[11,R[12],E,"Consume `self` returning the inner value",2,[[],[T]]],[11,"is_woken",E,"Returns `true` if the inner future has received a wake…",2,[[["self"]],["bool"]]],[11,"waker_ref_count",E,"Returns the number of references to the task waker",2,[[["self"]],["usize"]]],[11,"enter",E,"Enter the task context",2,[[["self"],["f"]],["r"]]],[11,"poll",E,"Poll a future",2,[[["self"]],["poll"]]],[11,R[115],E,"Poll a stream",2,[[["self"]],[["poll",[R[30]]],[R[30]]]]],[14,"assert_ready",R[258],"Assert a `Poll` is ready, returning the value.",N,N],[14,"assert_ready_ok",E,"Assert a `Poll<Result<...>>` is ready and `Ok`, returning…",N,N],[14,"assert_ready_err",E,"Assert a `Poll<Result<...>>` is ready and `Err`, returning…",N,N],[14,"assert_pending",E,"Assert a `Poll` is pending.",N,N],[14,"assert_ready_eq",E,"Assert if a poll is ready and check for equality on the…",N,N],[14,"assert_ok",E,"Asserts that the expression evaluates to `Ok` and returns…",N,N],[14,"assert_err",E,"Asserts that the expression evaluates to `Err` and returns…",N,N],[11,"into",R[259],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[149],E,E,3,[[[U]],[R[8]]]],[11,R[150],E,E,3,[[],[R[8]]]],[11,R[148],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[152],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[149],E,E,1,[[[U]],[R[8]]]],[11,R[150],E,E,1,[[],[R[8]]]],[11,R[148],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[152],E,E,1,[[["self"]],["typeid"]]],[11,R[155],E,E,0,[[["self"]],[T]]],[11,R[151],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[149],E,E,0,[[[U]],[R[8]]]],[11,R[150],E,E,0,[[],[R[8]]]],[11,R[148],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[152],E,E,0,[[["self"]],["typeid"]]],[11,"into",R[260],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[149],E,E,2,[[[U]],[R[8]]]],[11,R[150],E,E,2,[[],[R[8]]]],[11,R[148],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[152],E,E,2,[[["self"]],["typeid"]]],[11,"load",E,E,2,[[["self"]]]],[11,"load",E,E,2,[[["self"]],["dynguard"]]],[11,R[182],R[259],E,0,[[],[R[276]]]],[11,"clone",E,E,0,[[["self"]],[R[276]]]],[11,R[261],R[260],E,2,[[["self"]],[T]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"fmt",R[259],E,3,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,1,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,0,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[260],E,2,[[["self"],[R[177]]],[R[8]]]],[11,R[102],R[259],E,3,[[["self"],[R[23]],["pin"]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[107],E,E,3,[[["self"],[R[23]],["b"],["pin"]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,3,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,3,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[95],E,E,3,[[["self"],[R[23]],["pin"]],[[R[8],["usize"]],["poll",[R[8]]]]]]],"p":[[3,R[300]],[3,"Handle"],[3,"Spawn"],[3,"Mock"]]};
searchIndex["tokio_tls"]={"doc":"Async TLS streams","i":[[3,R[264],"tokio_tls","A wrapper around an underlying raw stream which implements…",N,N],[3,R[265],E,"A wrapper around a `native_tls::TlsConnector`, providing…",N,N],[3,R[266],E,"A wrapper around a `native_tls::TlsAcceptor`, providing an…",N,N],[11,R[14],E,"Returns a shared reference to the inner stream.",0,[[["self"]],["s"]]],[11,R[15],E,"Returns a mutable reference to the inner stream.",0,[[["self"]],["s"]]],[11,R[71],E,"Connects the provided stream with this connector, assuming…",1,[[["self"],["str"],["s"]]]],[11,"accept",E,"Accepts a new client connection with the provided stream.",2,[[["self"],["s"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[149],E,E,0,[[[U]],[R[8]]]],[11,R[150],E,E,0,[[],[R[8]]]],[11,R[148],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[152],E,E,0,[[["self"]],["typeid"]]],[11,R[155],E,E,1,[[["self"]],[T]]],[11,R[151],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[149],E,E,1,[[[U]],[R[8]]]],[11,R[150],E,E,1,[[],[R[8]]]],[11,R[148],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[152],E,E,1,[[["self"]],["typeid"]]],[11,R[155],E,E,2,[[["self"]],[T]]],[11,R[151],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[149],E,E,2,[[[U]],[R[8]]]],[11,R[150],E,E,2,[[],[R[8]]]],[11,R[148],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[152],E,E,2,[[["self"]],["typeid"]]],[11,"clone",E,E,1,[[["self"]],[R[262]]]],[11,"clone",E,E,2,[[["self"]],[R[263]]]],[11,"from",E,E,1,[[[R[262]]],[R[262]]]],[11,"from",E,E,2,[[[R[263]]],[R[263]]]],[11,"fmt",E,E,0,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,1,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,2,[[["self"],[R[177]]],[R[8]]]],[11,R[102],E,E,0,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]],[11,R[87],E,E,0,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[105],E,E,0,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[93],E,E,0,[[["self"]],["bool"]]],[11,R[95],E,E,0,[[["self"],["pin"],[R[23]]],[[R[8],["usize"]],["poll",[R[8]]]]]]],"p":[[3,R[264]],[3,R[265]],[3,R[266]]]};
searchIndex["tokio_util"]={"doc":"Utilities for working with Tokio.","i":[[0,"codec",R[285],"Utilities for encoding and decoding frames.",N,N],[3,R[296],R[281],"A simple `Codec` implementation that just ships bytes…",N,N],[3,"Framed",E,R[286],N,N],[3,R[294],E,"`FramedParts` contains an export of the data of a Framed…",N,N],[12,"io",E,"The inner transport used to read bytes to and write bytes to",0,N],[12,"codec",E,"The codec",0,N],[12,"read_buf",E,"The buffer with read but unprocessed data.",0,N],[12,"write_buf",E,"A buffer with unprocessed data which are not written yet.",0,N],[3,R[297],E,"A `Stream` of messages decoded from an `AsyncRead`.",N,N],[3,R[298],E,"A `Sink` of frames encoded to an `AsyncWrite`.",N,N],[3,R[301],E,"A simple `Codec` implementation that splits up data into…",N,N],[4,R[295],E,"An error occured while encoding or decoding a line.",N,N],[13,"MaxLineLengthExceeded",E,"The maximum line length was exceeded.",1,N],[13,"Io",E,"An IO error occured.",1,N],[11,"new",E,"Creates a new `BytesCodec` for shipping around raw bytes.",2,[[],[R[291]]]],[11,"new",E,R[267],3,[[[U],[T]],["framed"]]],[11,"from_parts",E,R[267],3,[[[R[268]]],["framed"]]],[11,R[14],E,R[269],3,[[["self"]],[T]]],[11,R[15],E,R[270],3,[[["self"]],[T]]],[11,"codec",E,"Returns a reference to the underlying codec wrapped by…",3,[[["self"]],[U]]],[11,"codec_mut",E,"Returns a mutable reference to the underlying codec…",3,[[["self"]],[U]]],[11,R[271],E,R[272],3,[[["self"]],[R[282]]]],[11,R[12],E,"Consumes the `Frame`, returning its underlying I/O stream.",3,[[],[T]]],[11,"into_parts",E,"Consumes the `Frame`, returning its underlying I/O stream,…",3,[[],[R[268]]]],[11,"new",E,"Create a new, default, `FramedParts`",0,[[[U],[T]],[R[268]]]],[11,"new",E,"Creates a new `FramedRead` with the given `decoder`.",4,[[["d"],[T]],[R[279]]]],[11,R[14],E,R[269],4,[[["self"]],[T]]],[11,R[15],E,R[270],4,[[["self"]],[T]]],[11,R[12],E,"Consumes the `FramedRead`, returning its underlying I/O…",4,[[],[T]]],[11,"decoder",E,R[273],4,[[["self"]],["d"]]],[11,"decoder_mut",E,R[274],4,[[["self"]],["d"]]],[11,R[271],E,R[272],4,[[["self"]],[R[282]]]],[11,"new",E,"Creates a new `FramedWrite` with the given `encoder`.",5,[[[T],["e"]],[R[280]]]],[11,R[14],E,R[269],5,[[["self"]],[T]]],[11,R[15],E,R[270],5,[[["self"]],[T]]],[11,R[12],E,"Consumes the `FramedWrite`, returning its underlying I/O…",5,[[],[T]]],[11,"encoder",E,R[273],5,[[["self"]],["e"]]],[11,"encoder_mut",E,R[274],5,[[["self"]],["e"]]],[0,"length_delimited",E,"Frame a stream of bytes based on a length prefix",N,N],[3,R[300],R[287],"Configure length delimited `LengthDelimitedCodec`s.",N,N],[3,R[303],E,"An error when the number of bytes read is more than max…",N,N],[3,R[299],E,"A codec for frames delimited by a frame head specifying…",N,N],[11,"new",E,"Creates a new `LengthDelimitedCodec` with the default…",6,[[],["self"]]],[11,R[276],E,R[275],6,[[],[R[276]]]],[11,R[277],E,"Returns the current max frame setting",6,[[["self"]],["usize"]]],[11,"set_max_frame_length",E,"Updates the max frame setting.",6,[[["self"],["usize"]]]],[11,"new",E,R[275],7,[[],[R[276]]]],[11,"big_endian",E,"Read the length field as a big endian integer",7,[[["self"]],["self"]]],[11,"little_endian",E,"Read the length field as a little endian integer",7,[[["self"]],["self"]]],[11,"native_endian",E,"Read the length field as a native endian integer",7,[[["self"]],["self"]]],[11,R[277],E,"Sets the max frame length",7,[[["self"],["usize"]],["self"]]],[11,"length_field_length",E,"Sets the number of bytes used to represent the length field",7,[[["self"],["usize"]],["self"]]],[11,"length_field_offset",E,"Sets the number of bytes in the header before the length…",7,[[["self"],["usize"]],["self"]]],[11,"length_adjustment",E,"Delta between the payload length specified in the header…",7,[[["self"],["isize"]],["self"]]],[11,"num_skip",E,"Sets the number of bytes to skip before reading the payload",7,[[["self"],["usize"]],["self"]]],[11,"new_codec",E,"Create a configured length delimited `LengthDelimitedCodec`",7,[[["self"]],[R[278]]]],[11,"new_read",E,"Create a configured length delimited `FramedRead`",7,[[["self"],[T]],[[R[278]],[R[279],[R[278]]]]]],[11,"new_write",E,"Create a configured length delimited `FramedWrite`",7,[[["self"],[T]],[[R[278]],[R[280],[R[278]]]]]],[11,"new_framed",E,"Create a configured length delimited `Framed`",7,[[["self"],[T]],[["framed",[R[278]]],[R[278]]]]],[11,"new",R[281],"Returns a `LinesCodec` for splitting up data into lines.",8,[[],[R[292]]]],[11,"new_with_max_length",E,"Returns a `LinesCodec` with a maximum line length limit.",8,[[["usize"]],["self"]]],[11,"max_length",E,"Returns the maximum line length when decoding.",8,[[["self"]],["usize"]]],[8,"Decoder",E,"Decoding of frames via buffers.",N,N],[16,"Item",E,"The type of decoded frames.",9,N],[16,"Error",E,"The type of unrecoverable frame decoding errors.",9,N],[10,"decode",E,"Attempts to decode a frame from the provided buffer of…",9,[[["self"],[R[282]]],[[R[8],[R[30]]],[R[30]]]]],[11,R[290],E,R[293],9,[[["self"],[R[282]]],[[R[8],[R[30]]],[R[30]]]]],[11,"framed",E,R[267],9,[[[R[284]],[R[283]],["sized"]],[[R[283]],["framed"],[R[284]],["sized"]]]],[8,"Encoder",E,"Trait of helper objects to write out messages as bytes,…",N,N],[16,"Item",E,"The type of items consumed by the `Encoder`",10,N],[16,"Error",E,"The type of encoding errors.",10,N],[10,"encode",E,"Encodes a frame into the buffer provided.",10,[[["self"],[R[282]]],[R[8]]]],[0,"udp",R[285],"UDP framing",N,N],[3,R[302],R[288],R[286],N,N],[11,"new",E,"Create a new `UdpFramed` backed by the given socket and…",11,[[["c"],[R[52]]],["udpframed"]]],[11,R[14],E,R[269],11,[[["self"]],[R[52]]]],[11,R[15],E,R[270],11,[[["self"]],[R[52]]]],[11,R[12],E,"Consumes the `Framed`, returning its underlying I/O stream.",11,[[],[R[52]]]],[11,R[155],R[281],E,2,[[["self"]],[T]]],[11,R[151],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[149],E,E,2,[[[U]],[R[8]]]],[11,R[150],E,E,2,[[],[R[8]]]],[11,R[148],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[152],E,E,2,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[149],E,E,3,[[[U]],[R[8]]]],[11,R[150],E,E,3,[[],[R[8]]]],[11,R[148],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[152],E,E,3,[[["self"]],["typeid"]]],[11,R[157],E,E,3,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[149],E,E,0,[[[U]],[R[8]]]],[11,R[150],E,E,0,[[],[R[8]]]],[11,R[148],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[152],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[149],E,E,4,[[[U]],[R[8]]]],[11,R[150],E,E,4,[[],[R[8]]]],[11,R[148],E,E,4,[[["self"]],[T]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[152],E,E,4,[[["self"]],["typeid"]]],[11,R[157],E,E,4,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[149],E,E,5,[[[U]],[R[8]]]],[11,R[150],E,E,5,[[],[R[8]]]],[11,R[148],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[152],E,E,5,[[["self"]],["typeid"]]],[11,R[157],E,E,5,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,R[155],E,E,8,[[["self"]],[T]]],[11,R[151],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[149],E,E,8,[[[U]],[R[8]]]],[11,R[150],E,E,8,[[],[R[8]]]],[11,R[148],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[152],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[160],E,E,1,[[["self"]],["string"]]],[11,R[149],E,E,1,[[[U]],[R[8]]]],[11,R[150],E,E,1,[[],[R[8]]]],[11,R[148],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[152],E,E,1,[[["self"]],["typeid"]]],[11,R[155],R[287],E,7,[[["self"]],[T]]],[11,R[151],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[149],E,E,7,[[[U]],[R[8]]]],[11,R[150],E,E,7,[[],[R[8]]]],[11,R[148],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[152],E,E,7,[[["self"]],["typeid"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[160],E,E,12,[[["self"]],["string"]]],[11,R[149],E,E,12,[[[U]],[R[8]]]],[11,R[150],E,E,12,[[],[R[8]]]],[11,R[148],E,E,12,[[["self"]],[T]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[152],E,E,12,[[["self"]],["typeid"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[149],E,E,6,[[[U]],[R[8]]]],[11,R[150],E,E,6,[[],[R[8]]]],[11,R[148],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[152],E,E,6,[[["self"]],["typeid"]]],[11,"into",R[288],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[149],E,E,11,[[[U]],[R[8]]]],[11,R[150],E,E,11,[[],[R[8]]]],[11,R[148],E,E,11,[[["self"]],[T]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[152],E,E,11,[[["self"]],["typeid"]]],[11,R[157],E,E,11,[[["pin"],["s"],[R[23]]],[[R[30],[R[8]]],["poll",[R[30]]]]]],[11,"decode",R[281],E,2,[[["self"],[R[282]]],[[R[30],[R[282]]],["error"],[R[8],[R[30],"error"]]]]],[11,"decode",R[287],E,6,[[["self"],[R[282]]],[[R[30],[R[282]]],[R[8],[R[30]]]]]],[11,"decode",R[281],E,8,[[["self"],[R[282]]],[[R[289]],[R[30],["string"]],[R[8],[R[30],R[289]]]]]],[11,R[290],E,E,8,[[["self"],[R[282]]],[[R[289]],[R[30],["string"]],[R[8],[R[30],R[289]]]]]],[11,"encode",E,E,2,[[["self"],["bytes"],[R[282]]],[["error"],[R[8],["error"]]]]],[11,"encode",R[287],E,6,[[["self"],["bytes"],[R[282]]],[["error"],[R[8],["error"]]]]],[11,"encode",R[281],E,8,[[["self"],["string"],[R[282]]],[[R[289]],[R[8],[R[289]]]]]],[11,R[182],E,E,2,[[],[R[291]]]],[11,R[182],R[287],E,6,[[],["self"]]],[11,R[182],E,E,7,[[],["self"]]],[11,R[182],R[281],E,8,[[],["self"]]],[11,"clone",E,E,2,[[["self"]],[R[291]]]],[11,"clone",R[287],E,7,[[["self"]],[R[276]]]],[11,"clone",R[281],E,8,[[["self"]],[R[292]]]],[11,R[179],E,E,2,[[["self"],[R[291]]],[[R[30],[R[178]]],[R[178]]]]],[11,"lt",E,E,2,[[["self"],[R[291]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[291]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[291]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[291]]],["bool"]]],[11,R[179],E,E,8,[[["self"],[R[292]]],[[R[30],[R[178]]],[R[178]]]]],[11,"lt",E,E,8,[[["self"],[R[292]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[292]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[292]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[292]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[291]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[291]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[292]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[292]]],["bool"]]],[11,"cmp",E,E,2,[[["self"],[R[291]]],[R[178]]]],[11,"cmp",E,E,8,[[["self"],[R[292]]],[R[178]]]],[11,"from",E,E,1,[[["error"]],[R[289]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"fmt",E,E,2,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,3,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,0,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,4,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,5,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[287],E,7,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,6,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,12,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[281],E,8,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",E,E,1,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[288],E,11,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[287],E,12,[[["self"],[R[177]]],[R[8]]]],[11,"fmt",R[281],E,1,[[["self"],[R[177]]],[R[8]]]],[11,R[115],E,E,3,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],E,E,4,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],E,E,5,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[115],R[288],E,11,[[["pin"],["self"],[R[23]]],[["poll",[R[30]]],[R[30]]]]],[11,R[190],R[281],E,3,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[191],E,E,3,[[["pin"],["self"],["i"]],[R[8]]]],[11,R[87],E,E,3,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[192],E,E,3,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[190],E,E,4,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[191],E,E,4,[[["pin"],["self"],["i"]],[R[8]]]],[11,R[87],E,E,4,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[192],E,E,4,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[190],E,E,5,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[191],E,E,5,[[["pin"],["self"],["i"]],[R[8]]]],[11,R[87],E,E,5,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[192],E,E,5,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[190],R[288],E,11,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[191],E,E,11,[[["pin"],["self"]],[R[8]]]],[11,R[87],E,E,11,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[192],E,E,11,[[["pin"],["self"],[R[23]]],[["poll",[R[8]]],[R[8]]]]],[11,R[290],R[281],R[293],9,[[["self"],[R[282]]],[[R[8],[R[30]]],[R[30]]]]],[11,"framed",E,R[267],9,[[[R[284]],[R[283]],["sized"]],[[R[283]],["framed"],[R[284]],["sized"]]]]],"p":[[3,R[294]],[4,R[295]],[3,R[296]],[3,"Framed"],[3,R[297]],[3,R[298]],[3,R[299]],[3,R[300]],[3,R[301]],[8,"Decoder"],[8,"Encoder"],[3,R[302]],[3,R[303]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);